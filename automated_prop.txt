@name Automated Prop
@inputs 
@outputs Outputs
@persist Path:table [CurPos Sounds]:array [Prop]:entity PosID NextPos Direction Props:array #Offset
@persist Back Forward BoxSize:table Mass Tick Delay R H Speed Spin
@trigger 
@strict

function entity:stablized(Angle:angle, MulVector:number, MulAngVel:number) {
    TarQ = quat(Angle)
    CurQ = quat(This)    
    Q = TarQ/CurQ     
    V = This:toLocal(rotationVector(Q)+This:pos())
    #Factors 150 and 12 can be adjusted to achieve best effect.
    This:applyTorque((MulVector*V - MulAngVel*This:angVelVector())*This:inertia())
}

if (first()) {
    propSpawnUndo(0)
    BoxSize = table()
    Props = array()
    Path = table()
    #[
    Path["gm_bigcity_improved_lite", table] = table(
        array(
            vec(1589, -2238, -11108),vec(3121, -2265, -11108),vec(3312, -2426, -11108),vec(3289, -5836, -11108),vec(3294, -10609, -11108),vec(3378, -10889, -11108),vec(3784, -10971, -11108),vec(10723, -10946, -11108),vec(10983, -10941, -11108),vec(11108, -10571, -11108),vec(11097, -6116, -11108),vec(10809, -5939, -11108),vec(9526, -5930, -11108),vec(9264, -5954, -11108),vec(9200, -6351, -11108),vec(9197, -8815, -11108),vec(9057, -9040, -11108),vec(6330, -8998, -11108),vec(6328, -2223, -11108),vec(9104, -2173, -11108),vec(9254, -1960, -11108),vec(9275, 340, -11108),vec(9932, 406, -11108),vec(10119, 573, -11108),vec(10082, 5976, -11108),vec(9983, 6185, -11108),vec(5277, 6238, -11108),vec(-1252, 6219, -11108),vec(-1498, 6304, -11108),vec(-1538, 12223, -11108),vec(-1640, 12496, -11108),vec(-2254, 12583, -11108),vec(-8696, 12571, -11108),vec(-8855, 12306, -11108),vec(-8849, 10542, -10860),vec(-8851, 6410, -10852),vec(-8876, 6334, -10852),vec(-8698, 6095, -10852),vec(-4920, 6046, -10852),vec(-4889, 3034, -11108),vec(-4822, 2781, -11108),vec(-4428, 2717, -11108),vec(-2651, 2720, -11108),vec(-2370, 2883, -11108),vec(-1929, 2870, -11108),vec(-1761, 2815, -11108),vec(-1722, 2457, -11108),vec(-1603, 2044, -11108),vec(-1401, 1724, -11108),vec(-1412, 1211, -11108),vec(-2807, 1167, -11108),vec(-3022, 1054, -11108),vec(-3045, -1177, -11108),vec(-2833, -1368, -11108),vec(-1467, -1387, -11108),vec(-1322, -1642, -11108),vec(-1349, -2638, -11108),vec(-1473, -2848, -11108),vec(-1488, -3479, -11108),vec(-1422, -3802, -11108),vec(-1054, -3904, -11108),vec(-431, -3867, -11108),vec(-260, -3720, -11108),vec(940, -3715, -11108),vec(1157, -3715, -11108),vec(1214, -3432, -11108),vec(1367, -3025, -11108),vec(1540, -2735, -11108)
        ),
        array(
            vec(1594, -2245, -11108),vec(3129, -2266, -11108),vec(3394, -2089, -11108),vec(3452, -1711, -11108),vec(3471, 782, -11108),vec(3357, 968, -11108),vec(1893, 976, -11108),vec(1748, 1099, -11108),vec(1716, 5912, -11108),vec(1566, 6145, -11108),vec(961, 6246, -11108),vec(-1926, 6251, -11108),vec(-4250, 6234, -10852),vec(-8468, 6215, -10852),vec(-8715, 6464, -10852),vec(-8705, 10364, -10852),vec(-8681, 12177, -11108),vec(-8508, 12391, -11108),vec(-1849, 12399, -11108),vec(-1655, 12169, -11108),vec(-1701, 8652, -11108),vec(-1683, 6418, -11108),vec(-1590, 6181, -11108),vec(-1367, 6051, -11108),vec(4784, 6068, -11108),vec(4939, 5922, -11108),vec(4950, 3181, -11108),vec(3653, 3124, -11108),vec(3418, 2946, -11108),vec(3325, 1363, -11108),vec(3299, -2508, -11108),vec(3296, -5758, -11108),vec(3102, -5891, -11108),vec(-1058, -5853, -11108),vec(-1282, -5812, -11108),vec(-1309, -3977, -11108),vec(-1067, -3850, -11108),vec(-521, -3835, -11056),vec(-42, -3697, -11108),vec(980, -3743, -11108),vec(1180, -3597, -11108),vec(1298, -3111, -11108),vec(1493, -2796, -11108)
        )
    )
    Path["gm_bigcity_improved", table] = Path["gm_bigcity_improved_lite", table]:clone()

    Path["gm_roustruct", table] = table(
        array(
            vec(3326.00,-1917.00,25.00), vec(2569.00,-1919.00,25.00), vec(1933.00,-1914.00,25.00), vec(1305.00,-1912.00,25.00), vec(901.00,-1893.00,25.00), vec(891.00,-1314.00,25.00), vec(779.00,-816.00,25.00), vec(766.00,-380.00,25.00), vec(1397.00,-351.00,25.00), vec(1396.00,141.00,25.00), vec(936.00,125.00,25.00), vec(528.00,117.00,25.00), vec(173.00,139.00,25.00), vec(241.00,620.00,25.00), vec(234.00,1068.00,25.00), vec(227.00,1621.00,25.00), vec(227.00,1994.00,25.00), vec(233.00,2297.00,25.00), vec(233.00,2297.00,25.00), vec(1347.00,2317.00,25.00), vec(1906.00,2319.00,25.00), vec(2724.00,2283.00,25.00), vec(2726.00,2283.00,25.00), vec(2712.00,1676.00,25.00), vec(2805.00,1168.00,59.00), vec(2656.00,634.00,25.00), vec(2743.00,28.00,25.00), vec(2744.00,28.00,25.00), vec(2766.00,-342.00,25.00), vec(3083.00,-379.00,25.00), vec(3332.00,-395.00,25.00), vec(3353.00,-784.00,25.00), vec(3348.00,-1474.00,25.00)
        )
    )
    Path["gm_supersizeroom_v2", table] = table(
        array(
            vec(2767.00,-1468.00,89.00), vec(-848.00,-1379.00,89.00), vec(-1261.00,-1839.00,89.00), vec(-2194.00,-2001.00,89.00), vec(-2832.00,-1042.00,89.00), vec(-2073.00,-247.00,89.00), vec(-1834.00,275.00,89.00), vec(-2442.00,1527.00,89.00), vec(-1793.00,2328.00,89.00), vec(-953.00,1657.00,89.00), vec(-1063,1851,89), vec(2390,1745,89), vec(5385,2617,89), vec(5661,2910,89), vec(5897,3330,89), vec(6256,4503,89), vec(6366,5713,89), vec(5983,5951,89), vec(5787,5717,89), vec(5651,5461,89), vec(4847,4294,89), vec(-1200,4258,89), vec(-2048,5031,89), vec(-2048,5031,89), vec(-3283,5228,89), vec(-3128,7850,89), vec(-1825,8311,89), vec(4546,8366,89), vec(4943,7238,89), vec(5102,5384,89), vec(5388,5231,89), vec(5663,5474,89), vec(5695,6551,89), vec(5862,6707,89), vec(6035,6876,89), vec(6067,9667,89), vec(6067,9667,89), vec(7560,7606,89), vec(7953,8085,89), vec(7818,9712,89), vec(7471,7542,89), vec(7121,6994,89), vec(5902,6736,89), vec(5693,6534,89), vec(6108,5170,89), vec(5837,3193,89), vec(5664,2912,89), vec(5477,2666,89), vec(3228,1302,89), vec(3090,1003,89), vec(2971,785,89), vec(2848,-445,89)
        )
    )
    Path["gm_excess_island_night", table] = table(
        array(
            vec(3598,1667,249), vec(1809,1705,249), vec(-578,1738,249), vec(-581,1734,249), vec(-962,1447,249), vec(-946,-83,25), vec(-954,-1540,25), vec(-945,-2371,25), vec(-1826,-2448,25), vec(-2291,-2518,25), vec(-2463,-4230,25), vec(-2179,-5099,25), vec(-1113,-5324,25), vec(442,-5318,25), vec(3387,-5405,25), vec(3590,-4947,25), vec(3604,-4135,171), vec(3587,-2531,249), vec(3570,-272,249), vec(3565,1418,249)
        )
    )
    Path["gm_blesmont", table] = table(
        array(
            vec(11714,-7611,13), vec(11731,-7442,13), vec(10491,-7430,13), vec(9151,-7437,16), vec(6542,-7438,13), vec(3776,-7438,13), vec(3396,-7450,13), vec(3301,-8022,13),  vec(3295,-9577,13), vec(3348,-9944,13), vec(5750,-10060,13), vec(9692,-10048,13), vec(9692,-10048,13), vec(10160,-10008,13), vec(10159,-9769,13), vec(10159,-7913,13), vec(10209,-7612,13), vec(10445,-7618,13)
        ),
        array(
            vec(11731,-7442,13), vec(10491,-7430,13), vec(9151,-7437,16), vec(6542,-7438,13), vec(3781,-7450,13), vec(3395,-7503,13), vec(3323,-8015,13), vec(3280,-8299,13), vec(1220,-8307,13), vec(-4148,-8299,13), vec(-4299,-8196,13), vec(-4314,-7488,13), vec(-4304,-6452,213), vec(-3890,-5129,217), vec(-3873,967,217),  vec(-3908,1128,217), vec(-3725,1121,217), vec(-1694,1119,217), vec(-1448,1025,217), vec(-1185,754,217), vec(89,-638,217), vec(136,-1317,217), vec(132,-4093,217), vec(103,-6423,217), vec(103,-6423,217), vec(112,-9747,217), vec(115,-9744,217), vec(194,-11770,217), vec(379,-12148,217), vec(714,-12530,217), vec(715,-12530,217), vec(1323,-12821,217), vec(1977,-12884,217), vec(7130,-12868,217), vec(7130,-12868,217), vec(7799,-12726,217), vec(8325,-12304,217), vec(8666,-11539,217), vec(8690,-9545,217), vec(8881,-9030,217), vec(8945,-8632,162), vec(8912,-7734,20), vec(9020,-7589,17), vec(9418,-7610,13), vec(9696,-7625,13), vec(11524,-7619,13)
        )
    )
    ]#
    Path["gm_boreas", table] = table(
        array(
            vec(-3371,-2942,-6422), vec(-1000,-3514,-6398), vec(1138,-3645,-6336), vec(2093,-3445,-6309), vec(3398,-2854,-6248), vec(4707,-3088,-6164), vec(5979,-3744,-6037), vec(7249,-3014,-5988), vec(8177,-1309,-5948), vec(8386,354,-5829), vec(8100,1564,-5680), vec(7098,2709,-5641), vec(6576,3667,-5586), vec(6206,5674,-5420), vec(5443,7050,-5327), vec(3877,7860,-5213), vec(1589,8387,-5030), vec(-189,9477,-4593),  vec(-661,10477,-4311), vec(-306,11904,-3991), vec(-1274,12810,-3710), vec(-3420,12180,-3333), vec(-4294,13033,-3112), vec(-4377,14018,-2904), vec(-3573,14650,-2811), vec(-2166,14608,-2514), vec(-870,14743,-2105), vec(609,15033,-1683), vec(2173,14705,-1136), vec(2809,13962,-933), vec(2803,13077,-808), vec(2493,12036,-703), vec(2784,11406,-668), vec(3421,11033,-620), vec(4031,11422,-524), vec(4161,12454,-356), vec(4546,13732,-118), vec(5749,14261,113), vec(7573,13936,337), vec(9382,13271,451), vec(10585,12589,433), vec(11455,11983,355), vec(13159,11565,76), vec(14266,10519,-175), vec(14660,9383,-340), vec(14238,7965,-599), vec(13608,7672,-659), vec(12516,8227,-802), vec(11559,8229,-885), vec(11159,7335,-993),  vec(11526,6414,-1135), vec(12535,6144,-1356),vec(12535,6144,-1356), vec(13794,5588,-1690), vec(14472,3915,-2039), vec(14338,2449,-2416), vec(13888,1385,-2559), vec(13357,1627,-2619), vec(12979,2249,-2737), vec(12367,3297,-2898), vec(11514,4093,-3009),  vec(10772,4399,-3044), vec(10263,3877,-3054), vec(10943,3068,-3181), vec(11690,2083,-3414), vec(12026,945,-3646), vec(12623,-135,-3844), vec(13385,-965,-4083), vec(14046,-2139,-4377), vec(14000,-3422,-4663), vec(13577,-5089,-4924), vec(13577,-5089,-4924), vec(13357,-6411,-5088), vec(13452,-8186,-5077), vec(13764,-9359,-4992), vec(13907,-10683,-5025), vec(13820,-11858,-5176), vec(13325,-13008,-5360), vec(12405,-13677,-5523), vec(10727,-14383,-5787), vec(8830,-14598,-6015), vec(6375,-14550,-6337), vec(4570,-14486,-6585), vec(3620,-13976,-6677), vec(2468,-12501,-6889),  vec(1835,-12043,-6935), vec(945,-11864,-7061), vec(-763,-12193,-7306), vec(-1698,-12731,-7461), vec(-3036,-13082,-7710), vec(-4087,-12809,-7876), vec(-4330,-12336,-7902), vec(-4706,-12348,-7938), vec(-5613,-12449,-8022), vec(-6729,-12551,-8140), vec(-7607,-12564,-8167), vec(-8627,-12521,-8167), vec(-9877,-12539,-8167), vec(-11495,-12525,-8167), vec(-12800,-12160,-8218), vec(-13386,-11568,-8215), vec(-13768,-10321,-8190), vec(-13635,-9105,-8084), vec(-13379,-8274,-8011), vec(-12778,-7259,-7941), vec(-12943,-5451,-7800), vec(-12379,-4092,-7634), vec(-11825,-2229,-7452), vec(-11290,-315,-7447), vec(-11523,1387,-7446), vec(-12170,1298,-7416), vec(-12531,406,-7306), vec(-13306,-2150,-6949), vec(-13776,-2654,-6935), vec(-14432,-2523,-6934), vec(-14621,-1290,-6894), vec(-14028,322,-6722), vec(-13466,2539,-6501), vec(-12337,4001,-6375), vec(-9870,6466,-6379), vec(-8952,7168,-6423), vec(-8233,6281,-6416), vec(-7637,5197,-6358), vec(-7189,3414,-6250), vec(-6937,1048,-6289), vec(-6271,-1064,-6373), vec(-4918,-2279,-6411)
        )
    )
#[
    Path["gm_construct_m3_350", table] = table(
        #array(vec(-2034,1511,-13283), vec(-2031,1501,-13283), vec(4771,1504,-13283),  vec(4771,1504,-13283), vec(6393,1496,-13283), vec(6578,1183,-13283), vec(6593,196,-13283),  vec(6760,-208,-13283), vec(7180,-475,-13283), vec(9615,-660,-13283), vec(9632,-339,-13283), vec(7285,-481,-13283), vec(6792,-248,-13283), vec(6568,303,-13283), vec(6576,1219,-13283), vec(6445,1477,-13283), vec(6084,1512,-13283), vec(-1642,1496,-13283),  vec(-5791,1499,-13283), vec(-11814,1508,-13283), vec(-13611,1497,-13283), vec(-14101,1642,-13283), vec(-14180,1381,-13283), vec(-11873,1493,-13283), vec(-7651,1491,-13283)),
        #array(vec(-3082,1502,-13283), vec(-5812,1514,-13283), vec(-9207,1497,-13283), vec(-9672,1864,-13287), vec(-9694,2442,-13287), vec(-8865,2468,-13286), vec(-7686,2434,-13031),  vec(-6322,2552,-12775),vec(-6321,2552,-12775), vec(-5796,3051,-12775), vec(-4715,3036,-12775), vec(-4071,3361,-12775), vec(-3389,3394,-12742), vec(-2542,3432,-12530), vec(-1570,3543,-12519), vec(-713,3652,-12519), vec(579,3557,-12519), vec(580,3557,-12519), vec(1985,3490,-12775), vec(3701,3445,-12775), vec(3703,3446,-12775), vec(14069,3522,-12775), vec(14877,4961,-12775), vec(14877,5274,-12775), vec(13072,5434,-12775), vec(2120,5302,-12775), vec(886,5316,-12519), vec(-2516,5345,-12524), vec(-3543,5347,-12775), vec(-13957,5418,-12775), vec(-14311,3507,-12775), vec(-14311,3507,-12775), vec(-6730,3470,-12775), vec(-6247,3521,-12775), vec(-6217,2741,-12775), vec(-6576,2836,-12775), vec(-8730,2760,-13286), vec(-9643,2658,-13287), vec(-9679,1588,-13283), vec(-4130,1563,-13283), vec(-4118,2311,-13286), vec(-3672,2739,-13286), vec(-1340,2763,-13286), vec(-1223,2108,-13286), vec(-1262,1550,-13283))
        #array(vec(-1686,-1980,-13071), vec(-1597,363,-13071), vec(-2216,506,-13071), vec(-4525,371,-13071), vec(-4597,-2118,-13071))
        array(vec(-2034,1511,-13283), vec(-2031,1501,-13283), vec(4771,1504,-13283),  vec(4771,1504,-13283), vec(6393,1496,-13283), vec(6578,1183,-13283), vec(6593,196,-13283),  vec(6760,-208,-13283), vec(7180,-475,-13283), vec(9615,-660,-13283), vec(9632,-339,-13283), vec(7285,-481,-13283), vec(6792,-248,-13283), vec(6568,303,-13283), vec(6576,1219,-13283), vec(6445,1477,-13283), vec(6084,1512,-13283), vec(-1642,1496,-13283),  vec(-5791,1499,-13283), vec(-11814,1508,-13283), vec(-13611,1497,-13283), vec(-14101,1642,-13283), vec(-14180,1381,-13283), vec(-11873,1493,-13283), vec(-7651,1491,-13283), vec(-3082,1502,-13283), vec(-5812,1514,-13283), vec(-9207,1497,-13283), vec(-9672,1864,-13287), vec(-9694,2442,-13287), vec(-8865,2468,-13286), vec(-7686,2434,-13031),  vec(-6322,2552,-12775),vec(-6321,2552,-12775), vec(-5796,3051,-12775), vec(-4715,3036,-12775), vec(-4071,3361,-12775), vec(-3389,3394,-12742), vec(-2542,3432,-12530), vec(-1570,3543,-12519), vec(-713,3652,-12519), vec(579,3557,-12519), vec(580,3557,-12519), vec(1985,3490,-12775), vec(3701,3445,-12775), vec(3703,3446,-12775), vec(14069,3522,-12775), vec(14877,4961,-12775), vec(14877,5274,-12775), vec(13072,5434,-12775), vec(2120,5302,-12775), vec(886,5316,-12519), vec(-2516,5345,-12524), vec(-3543,5347,-12775), vec(-13957,5418,-12775), vec(-14311,3507,-12775), vec(-14311,3507,-12775), vec(-6730,3470,-12775), vec(-6247,3521,-12775), vec(-6217,2741,-12775), vec(-6576,2836,-12775), vec(-8730,2760,-13286), vec(-9643,2658,-13287), vec(-9679,1588,-13283), vec(-4130,1563,-13283), vec(-4118,2311,-13286), vec(-3672,2739,-13286), vec(-1340,2763,-13286), vec(-1223,2108,-13286), vec(-1262,1550,-13283))
    )
    Path["gm_functional_flatgrass", table] = table(
        array(vec(-97,-102,-11247), vec(-100,-8197,-11247), vec(-156,-8451,-11247), vec(-403,-8482,-11247), vec(-8731,-8472,-11247), vec(-8731,-8472,-11247), vec(-9090,-8375,-11247), vec(-9254,-8099,-11247), vec(-9245,8568,-11247), vec(-9161,8976,-11247), vec(-8839,9134,-11247), vec(-5476,9118,-11503), vec(-5197,9013,-11503), vec(-5031,8657,-11503), vec(-5032,5400,-11759), vec(-5096,5086,-11759), vec(-5365,4913,-11759), vec(-8626,4886,-12015), vec(-9072,4984,-12015), vec(-9252,5316,-12015), vec(-9248,8583,-12271), vec(-9130,8988,-12271), vec(-8819,9118,-12271), vec(-7938,9137,-12316), vec(-6065,9126,-12510), vec(-254,9122,-12527), vec(5384,9142,-12527), vec(8417,9130,-12275), vec(9023,9080,-12271), vec(9254,8753,-12271), vec(9245,5343,-12015), vec(9182,5106,-12015), vec(8817,4895,-12015), vec(5971,4875,-11769), vec(5498,4875,-11759), vec(5243,4951,-11759), vec(5063,5129,-11759), vec(5006,5735,-11754), vec(5016,8161,-11513), vec(5019,8673,-11503), vec(5105,8933,-11503), vec(5418,9111,-11503), vec(8839,9108,-11247), vec(9147,8979,-11247), vec(9246,8727,-11247), vec(9225,3744,-11247), vec(9240,2003,-11247), vec(9251,-8033,-11247), vec(9136,-8356,-11247), vec(8840,-8505,-11247), vec(7124,-8488,-11247), vec(5158,-8511,-11247), vec(340,-8487,-11247), vec(161,-8424,-11247), vec(67,-8200,-11247), vec(89,-50,-11247), vec(105,1808,-11247), vec(430,2194,-11247), vec(622,2625,-11247), vec(516,3066,-11247), vec(49,3246,-11247), vec(-404,3039,-11247), vec(-548,2637,-11247), vec(-373,2274,-11247), vec(-149,1860,-11247), vec(-94,1537,-11247))
    )
    Path["gm_rustheart_summer", table] = table(
        array(vec(13,-13591,25), vec(3767,-13571,46), vec(8760,-12974,25), vec(10828,-11864,25), vec(11957,-9012,25), vec(9870,-5781,51), vec(6865,-4222,25), vec(6450,-2435,25), vec(8500,1280,150), vec(11362,3710,249), vec(11419,5838,278), vec(10714,6635,281), vec(9146,6638,268), vec(8319,5748,251), vec(5089,1948,66), vec(1744,425,25), vec(-730,373,25), vec(-1736,1262,25), vec(-1307,2257,25), vec(1801,2891,25), vec(3201,4044,25), vec(2323,5632,25), vec(-2417,6195,48), vec(-2417,6195,48), vec(-4134,7080,25), vec(-4256,8200,25), vec(-2654,9094,25), vec(-2589,9108,25), vec(2791,10036,147), vec(6396,9599,25), vec(9504,10811,25), vec(10055,11679,25), vec(9596,12726,25), vec(8692,13453,25), vec(5825,14066,25), vec(4512,14123,25), vec(-719,12939,-183), vec(-3142,12417,-274), vec(-6152,13123,-85), vec(-8783,14419,25), vec(-10936,14568,25), vec(-13040,13195,25), vec(-13545,11917,25), vec(-12712,9989,25), vec(-11117,7397,25), vec(-13307,4694,129), vec(-14166,3404,148), vec(-13380,939,75), vec(-11827,-1161,25), vec(-10251,-687,25), vec(-10265,1037,25), vec(-10910,2660,25), vec(-9036,3323,25), vec(-9036,3323,25), vec(-8873,3296,25), vec(-5662,1496,-37), vec(-4854,170,-61), vec(-6554,-2165,-32), vec(-8802,-3800,-20), vec(-10747,-3324,25), vec(-12873,-4366,29), vec(-14082,-6122,120), vec(-13921,-7786,150), vec(-12785,-8693,130), vec(-10590,-7388,36), vec(-8683,-6458,25), vec(-6174,-6449,25), vec(-5204,-7102,25), vec(-5062,-8820,25), vec(-6126,-9993,25), vec(-9049,-9627,25), vec(-10217,-10410,25), vec(-10421,-12657,25), vec(-9236,-14005,25), vec(-4217,-13670,50))
    )
    Path["gm_goldencity_v2", table] = table(
        #array(vec(5918,-1095,17),vec(5834,-2179,17),vec(5822,-3198,17),vec(5960,-4285,17),vec(4687,-4152,17),vec(3506,-4150,17),vec(2231,-4317,17),vec(2367,-3200,17),vec(2347,-2172,17),vec(2173,-1083,17),vec(3514,-1220,17),vec(4692,-1217,17)),
        array(vec(2199,-1040,17),vec(3495,-1223,17),vec(4656,-1216,17),vec(5978,-1049,17),vec(5816,-2158,17),vec(5818,-3183,17),vec(5997,-4271,17),vec(4680,-4153,17),vec(3513,-4153,17),vec(2265,-4311,17),vec(2365,-3199,17),vec(2362,-2162,17),vec(2183,-1036,17),vec(1233,-833,17),vec(265,-1010,17),vec(411,-353,17),vec(184,1409,17),vec(186,5391,17),vec(-1439,5558,17),vec(-2158,5403,17),vec(-1990,6544,17),vec(-1962,9050,17),vec(-1978,10686,17),vec(-2185,10994,17),vec(-2794,11204,17),vec(-4635,11204,17),vec(-5716,11209,17),vec(-10543,11206,17),vec(-11001,11003,17),vec(-11220,10546,17),vec(-11206,8736,17),vec(-11207,7749,17),vec(-11210,5837,17),vec(-11197,4904,17),vec(-11199,2678,17),vec(-11199,1736,17),vec(-11197,-575,265),vec(-11021,-1010,273),vec(-10520,-1218,273),vec(-8487,-1216,273),vec(-7620,-1216,266),vec(-5842,-1212,43),vec(-4789,-1209,17),vec(-5842,-1212,43),vec(-4789,-1209,17),vec(-196,-1213,17),vec(699,-1222,17),vec(2146,-1062,17))
    )

    Path["gm_genesis", table] = table(
        array(vec(7433,-5729,-8284),vec(3267,-5773,-8284),vec(-1254,-5756,-8284),vec(-4847,-5785,-8284),vec(-6491,-5778,-8284),vec(-6849,-5967,-8284),vec(-7063,-6404,-8284),vec(-7046,-8216,-8284),vec(-6976,-9844,-8284),vec(-6820,-10332,-8284),vec(-6267,-10595,-8284),vec(-4787,-10613,-8284),vec(-1340,-10603,-8284),vec(3338,-10603,-8284),vec(7404,-10599,-8284),vec(9345,-10583,-8284),vec(9835,-10310,-8284),vec(10062,-9899,-8284),vec(10087,-8109,-8284),vec(10071,-6521,-8284),vec(9838,-6029,-8284),vec(9397,-5793,-8284)),
        array(vec(7386,-5968,-8284),vec(9240,-5973,-8284),vec(9618,-6199,-8284),vec(9833,-6689,-8284),vec(9860,-8018,-8284),vec(9875,-9641,-8284),vec(9681,-10133,-8284),vec(9313,-10352,-8284),vec(7451,-10378,-8284),vec(3538,-10383,-8284),vec(-279,-10391,-8284),vec(-3324,-10392,-8284),vec(-6006,-10388,-8284),vec(-6543,-10164,-8284),vec(-6743,-9794,-8284),vec(-6769,-8446,-8284),vec(-6821,-6455,-8284),vec(-6649,-6181,-8284),vec(-6284,-6044,-8284),vec(-3315,-5962,-8284),vec(-261,-6021,-8284),vec(3404,-5992,-8284))
    )
    Path["gm_sn_servers_0342", table] = table(
        array(vec(-10152,503,1290),vec(-10150,-9843,1297),vec(-10152,-10681,1093),vec(-10191,-11727,1067),vec(-10311,-13047,1067),vec(-10831,-13543,1067),vec(-11757,-13453,1067),vec(-11911,-12746,1067),vec(-12085,-10751,1067),vec(-12056,-7499,1067),vec(-12215,-6684,1067),vec(-12670,-5761,1067),vec(-12725,592,1067),vec(-12467,1110,1067),vec(-11318,1217,1067),vec(-11037,616,1067),vec(-10779,-237,1067),vec(-9619,-693,1067),vec(-9217,-1304,1067),vec(-9375,-1972,1067),vec(-10614,-2358,1067),vec(-10940,-2949,1067),vec(-10976,-8469,1067),vec(-10633,-9090,1067),vec(-9648,-9137,1067),vec(-9192,-8506,1067),vec(-9176,-4197,1074),vec(-9177,-3330,1291),vec(-9172,102,1296),vec(-9175,1209,1057),vec(-9181,2102,836),vec(-9178,10599,827),vec(-9183,11631,1053),vec(-9195,13263,1067),vec(-9561,13662,1067),vec(-12212,13804,1067),vec(-12710,13235,1067),vec(-12678,10912,1067),vec(-12248,10374,1067),vec(-9832,10291,1067),vec(-9418,9886,1067),vec(-9246,4206,1067),vec(-9552,3398,1067),vec(-10617,3367,1067),vec(-10846,3920,1067),vec(-10883,5312,1067),vec(-10368,6394,1067),vec(-10175,8333,1067),vec(-10372,9001,1067),vec(-10939,9228,1067),vec(-11638,9092,1067),vec(-11849,8408,1067),vec(-11884,3100,1067),vec(-11666,2593,1067),vec(-11171,2385,1067),vec(-10544,2107,1067),vec(-10168,1370,1071))
    )
    Path["gm_futuropark_circuit_v1", table] = table(
        array(vec(-2592,-6335,25),vec(-9305,-6295,6),vec(-10929,-6184,-22),vec(-12157,-4411,-61),vec(-12522,-1833,-109),vec(-10853,-350,-150),vec(-8524,410,-195),vec(-6363,-1317,-231),vec(-5818,-5511,-231),vec(-5833,-8967,-83),vec(-5677,-11796,25),vec(-6066,-13386,25),vec(-4814,-14249,25),vec(-3990,-13727,25),vec(-3382,-12573,25),vec(-3685,-10191,57),vec(-3609,-6365,281),vec(-3401,-664,536),vec(-2779,3125,537),vec(-2746,5263,537),vec(-3648,6713,537),vec(-5518,7661,537),vec(-7866,7379,537),vec(-9754,6965,537),vec(-11883,7519,537),vec(-12801,8934,537),vec(-12255,10771,537),vec(-10350,11423,537),vec(-8179,11281,537),vec(-5152,11504,537),vec(-2705,11592,647),vec(-2590,11590,661),vec(-1919,11567,796),vec(-1392,11599,647),vec(461,11526,537),vec(5128,11479,537),vec(7913,10931,451),vec(10108,9090,385),vec(11149,5904,308),vec(9870,2877,232),vec(7615,119,148),vec(7017,-1802,73),vec(7370,-3668,27),vec(8962,-5625,25),vec(10068,-7156,25),vec(10723,-9450,25),vec(10137,-11744,25),vec(8376,-13431,25),vec(6535,-13602,25),vec(4472,-12216,25),vec(3938,-9925,24),vec(3887,-7333,-179),vec(4044,-3840,-231),vec(4368,-1606,-231),vec(5353,2336,-231),vec(6024,5747,-231),vec(7051,7781,-231),vec(8845,8358,-231),vec(10856,7908,-231),vec(12331,6169,-231),vec(12492,4072,-231),vec(12048,1300,-231),vec(11241,-999,-231),vec(9335,-2947,58),vec(8071,-4493,271),vec(6688,-5609,105),vec(5073,-6289,25),vec(2842,-6405,25),vec(-290,-6359,25))
    )
    Path["rp_rudmerge", table] = table(
        array(
            vec(-6469, 7856, 132),vec(-6577, 7089, 132),vec(-7353, 6683, 132),vec(-9375, 6781, 132),vec(-10002, 7137, 132),vec(-10298, 7724, 132),vec(-10557, 9384, 132),vec(-10316, 9944, 132),vec(-9863, 10441, 132),vec(-8702, 10912, 132),vec(-7366, 11217, 132),vec(-6413, 11297, 132),vec(-5978, 10959, 132),vec(-5956, 10438, 132),vec(-6203, 9708, 132),vec(-6350, 9052, 132)
        )
    )
    Path["gm_vyten", table] = table(
        array(
            vec(10309, -11222, -15088),vec(11312, -11297, -15098),vec(11526, -10835, -15108),vec(11109, -10238, -15108),vec(10197, -10187, -15108),vec(9473, -10524, -15108),vec(8099, -10509, -15109),vec(6895, -9632, -15156),vec(6765, -8105, -15190),vec(6114, -6787, -15393),vec(6018, -3726, -15594),vec(5771, -2860, -15605),vec(4476, -2051, -15591),vec(1618, -2719, -15558),vec(1149, -2424, -15488),vec(909, -1473, -15396),vec(49, -1309, -15419),vec(-464, -1570, -15434),vec(-1036, -2135, -15410),vec(-1835, -2175, -15404),vec(-2649, -2075, -15394),vec(-4231, -3001, -15360),vec(-5910, -3920, -15360),vec(-6476, -4952, -15336),vec(-7928, -5750, -15143),vec(-8871, -6392, -15082),vec(-9643, -7500, -15074),vec(-10120, -8605, -15102),vec(-10493, -9223, -15092),vec(-10218, -9767, -15094),vec(-9496, -11404, -15071),vec(-8728, -12622, -15096),vec(-7997, -13538, -15168),vec(-5858, -11873, -15572),vec(-4974, -10227, -15564),vec(-5290, -8186, -15561),vec(-5466, -6490, -15412),vec(-5304, -5202, -15362),vec(-3937, -5241, -15362),vec(-2577, -5477, -15431),vec(-1364, -4968, -15575),vec(130, -3692, -15606),vec(1400, -2820, -15519),vec(2725, -2204, -15676),vec(4287, -2046, -15596),vec(5180, -2581, -15598),vec(5799, -3743, -15591),vec(6067, -6022, -15557),vec(6538, -7626, -15287),vec(6597, -9172, -15165),vec(7132, -10113, -15137),vec(8235, -10530, -15106),vec(9014, -10621, -15106)
        )
    )
    ]#
    Path["gm_functional_flatgrass", table] = table(
        array(
            vec(117,1811,-11236),vec(352,2218,-11236),vec(544,2578,-11236),vec(418,3059,-11236),vec(28,3282,-11236),vec(-404,3066,-11236),vec(-466,2496,-11236),vec(-90,1849,-11236),vec(-95,591,-11236),vec(-94,-549,-11236),vec(-103,-2735,-11236),vec(-113,-5620,-11236),vec(-81,-7857,-11236),vec(-83,-8442,-11236),vec(-279,-8482,-11236),vec(-573,-8501,-11236),vec(-3980,-8481,-11236),vec(-8785,-8497,-11236),vec(-9102,-8387,-11236),vec(-9237,-8120,-11236),vec(-9245,-5705,-11236),vec(-9271,-2357,-11236),vec(-9241,651,-11236),vec(-9255,3012,-11236),vec(-9254,5824,-11236),vec(-9264,8624,-11236),vec(-9149,8976,-11236),vec(-8808,9137,-11236),vec(-7272,9106,-11350),vec(-5487,9131,-11492),vec(-5168,8996,-11492),vec(-5018,8654,-11492),vec(-4991,7066,-11614),vec(-5023,5447,-11748),vec(-5117,5033,-11748),vec(-5401,4870,-11748),vec(-6874,4879,-11849),vec(-8309,4888,-11994),vec(-8877,4881,-12004),vec(-9128,5028,-12004),vec(-9254,5290,-12004),vec(-9228,5859,-12015),vec(-9282,6934,-12124),vec(-9253,8603,-12260),vec(-9172,8937,-12260),vec(-8878,9155,-12260),vec(-5965,9138,-12506),vec(-3191,9137,-12516),vec(-135,9132,-12516),vec(5293,9123,-12516),vec(8331,9130,-12268),vec(8992,9129,-12260),vec(9229,8937,-12260),vec(9275,7007,-12132),vec(9287,5638,-12004),vec(9188,5081,-12004),vec(8948,4846,-12004),vec(7446,4898,-11908),vec(5480,4844,-11748),vec(5185,5004,-11748),vec(4990,5327,-11748),vec(4993,7054,-11615),vec(5042,8371,-11493),vec(5073,8866,-11492),vec(5349,9141,-11492),vec(6730,9124,-11406),vec(8615,9112,-11236),vec(9067,9041,-11236),vec(9247,8792,-11236),vec(9253,6702,-11236),vec(9245,4132,-11236),vec(9268,1734,-11236),vec(9260,-608,-11236),vec(9231,-3532,-11236),vec(9230,-7688,-11236),vec(9202,-8273,-11236),vec(9024,-8413,-11236),vec(7160,-8475,-11236),vec(4866,-8500,-11236),vec(456,-8485,-11236),vec(180,-8415,-11236),vec(51,-8167,-11236),vec(95,-6298,-11236),vec(118,-3123,-11236),vec(108,-644,-11236)
        )
    )
    
    Path["gm_city25", table] = table(
        array(
            vec(252,-272,100),vec(2160,-359,100),vec(5747,-358,100),vec(9837,-375,100),vec(9851,-2644,100),vec(10209,-2944,100),vec(12800,-2952,100),vec(13169,-2588,100),vec(13175,-671,100),vec(13039,1,100),vec(12446,397,100),vec(10621,336,100),vec(10621,2404,100),vec(10774,2688,100),vec(12775,2699,100),vec(13300,2846,100),vec(13625,3320,100),vec(13668,9492,292),vec(13694,11560,292),vec(13198,12677,292),vec(12094,13120,292),vec(10835,12689,292),vec(10373,11666,292),vec(10365,10142,292),vec(4761,10113,101),vec(4240,9729,100),vec(4237,7835,100),vec(4247,3292,100),vec(4239,663,100),vec(4124,281,100),vec(648,151,100),vec(-8030,132,100),vec(-8565,-505,100),vec(-8538,-2842,100),vec(-8230,-3244,100),vec(-7714,-3441,100),vec(-4570,-3455,100),vec(-4191,-3618,100),vec(-3967,-4006,100),vec(-3976,-6514,100),vec(-3549,-7073,100),vec(-667,-7027,100),vec(-17,-6949,100),vec(385,-6349,100)
        ),
        array(
            vec(-394,-475,100),vec(-383,-6639,100),vec(-386,-10778,100),vec(462,-11152,100),vec(2172,-11131,100),vec(2171,-12785,164),vec(2536,-13159,164),vec(4474,-13181,164),vec(4724,-13298,164),vec(4734,-14349,164),vec(5057,-14698,164),vec(12799,-14725,164),vec(13228,-14335,164),vec(13185,-10376,100),vec(13158,-646,100),vec(12705,244,100),vec(767,323,100),vec(359,511,100),vec(174,2698,100),vec(-452,2953,100),vec(-2431,2917,100),vec(-2924,2595,100),vec(-2936,677,100),vec(-2456,-298,100)
        )
    )
    Models_array = array(
        "models/props_vehicles/car003a_physics.mdl",
        "models/props_vehicles/car002a_physics.mdl",
        "models/props_vehicles/car004a_physics.mdl"
        #"models/left4dead/vehicles/bus.mdl",
        #"models/left4dead/vehicles/church_bus.mdl",
        #"models/gta_sa/public_service/bus.mdl",
    )
        
    Sounds = array(
        "vehicles/v8/v8_idle_loop1.wav",
        "vehicles/airboat/fan_motor_idle_loop1.wav"
    )
    
    #For Random Direction
    Direction = randint(0, 1)
    
    if (Direction == 0) {
        Direction = -1
    } else {
        Direction = 1
    }
    
    #For One Direction
    Direction = 1
    
    Spin = 0
    Tick = 0
    Delay = 0.025
    Back = 0
    Forward = 0
    
    Speed = 3000
    
    #Offset = 90
    
    Mass = 2048
    
    R = 24
    H = 0
    
    local Distance = 100000
    local Index1    = 0
    local Index2    = 0
    for (I = 1, Path[map(), table]:count()) {
        local Pos = Path[map(), table][I, array]
        for (J = 1, Pos:count()) {
            local Nearest = entity():pos():distance(Pos[J, vector])
            
            if (Nearest < Distance) {
                Distance = Nearest
                Index1 = I
                Index2 = J
            }
        }
    }
    
    CurPos = Path[map(), table][Index1, array]
    PosID = Index2
    NextPos = PosID

    for (I = 1, CurPos:count()) {
        local Vec = CurPos[I, vector]
        local R1 = random(-R, R)
        local R2 = random(-R, R)
        local Plus = vec(R1, R2, H)
        Vec = Vec + Plus
        CurPos[I, vector] = Vec
    }
    
    if (!entity():isWeldedTo() & propCanCreate()) {
        local Pos = entity():pos() + vec(0, 0, 100)
        local End = NextPos
        local Dir = End - Pos
        local Ang = Dir:toAngle()
        Prop = propSpawn(Models_array[randint(1, Models_array:count()), string], Pos, Ang, 0)
        #Prop = propSpawn(Models_array[4, string], entity():pos() + vec(0, 0, 25), ang(), 0)
        Prop:propPhysicalMaterial("metalvehicle")
        #Prop:propPhysicalMaterial("rubbertire")
        Prop:propSetFriction(0)
        Prop:propDrag(0)
        Prop:propGravity(0)
        Prop:setColor(vec(randint(0, 255), randint(0, 255), randint(0, 255)))
        #noCollideAll(Prop, 1)
        
        BoxSize["X", number] = Prop:boxSize():x()
        BoxSize["Y", number] = Prop:boxSize():y()
        BoxSize["Z", number] = Prop:boxSize():z()
                
        Props:pushEntity(Prop)
        holoCreate(1, Prop:toWorld(vec( 48, 32,-18)), vec(1), Prop:toWorld(ang(0, 0, 0)), vec(255), "models/xeon133/racewheel/race-wheel-40.mdl")
        holoCreate(2, Prop:toWorld(vec( 48,-32,-18)), vec(1), Prop:toWorld(ang(0, 180, 0)), vec(255), "models/xeon133/racewheel/race-wheel-40.mdl")
        holoCreate(3, Prop:toWorld(vec(-48, 32,-18)), vec(1), Prop:toWorld(ang(0, 0, 0)), vec(255), "models/xeon133/racewheel/race-wheel-40.mdl")
        holoCreate(4, Prop:toWorld(vec(-48,-32,-18)), vec(1), Prop:toWorld(ang(0, 180, 0)), vec(255), "models/xeon133/racewheel/race-wheel-40.mdl")
        
        for (I = 1, 4) {
            holoParent(I, Prop)
            holoEntity(I):setTrails(128, 0, 5, "trails/laser", Prop:getColor(), 255)
        }
    } else {
        Prop = entity():isWeldedTo()
        Prop:propPhysicalMaterial("ice")
        Prop:propSetFriction(0)
        Prop:propDrag(0)
        Prop:propGravity(0)
        Prop:setMass(25000)
        
        #Offset = -90
        Props:pushEntity(Prop)
    }
    
    
    Props[1, entity]:emitSound(Sounds[randint(1, Sounds:count()), string])
    #soundPitch(1, random(80, 120))
    #Props[1, entity]:setTrails(128, 0, 10, "trails/laser", vec(100, 100, 255), 255)
    
    rangerFilter(Prop)
    rangerPersist(1)

    if (Props[1, entity]) {
        Props[1, entity]:setMass(Mass)
    }
    
    entity():setAlpha(0)
    entity():setPos(entity():pos():setZ(-12000))
}

event chat(Ply:entity, Last:string, _:number) {
    if (Ply == owner()) {
        Cmd = Last:explode(" ")
        if (Cmd[1, string] == "-freeze") {
            Props[1, entity]:propFreeze(1)
        }
        elseif (Cmd[1, string] == "-unfreeze") {
            Props[1, entity]:propFreeze(0)
        }
        elseif (Cmd[1, string] == "-get") {
            print(CurPos[NextPos, vector])
        }
    }
}

event tick() {
    local Curtick = curtime()
    if (Curtick > Tick + Delay) {
        if (Prop:isFrozen()) { Prop:propFreeze(0) }
        Tick = Curtick
        local Prop = Props[1, entity]
        local Bx = BoxSize["X", number]
        local By = BoxSize["Y", number]
        local Bz = BoxSize["Z", number]
        
        local Forw  = Prop:forward()
        local Up    = Prop:up()
        local Right = Prop:right()
        
        local EntAng = Prop:angles()
        local EntP = EntAng:pitch()
        local EntY = EntAng:yaw()
        local EntR = EntAng:roll()
        
        local Vel   = Prop:vel()
        local AVel  = Prop:angVel()
        local EntPos = Prop:pos() + Vel * tickInterval()
        
        #soundPitch(1, abs(Vel:length())/2)
        
        Spin += Prop:velL():x() / (2 * _PI * 20) * tickInterval() * 360
        
        holoAng(1, Prop:toWorld(ang(Spin, 0, 0)))
        holoAng(2, Prop:toWorld(ang(-Spin, 180, 0)))
        holoAng(3, Prop:toWorld(ang(Spin, 0, 0)))
        holoAng(4, Prop:toWorld(ang(-Spin, 180, 0)))
                
        local DesPos = CurPos[NextPos, vector]
        if (DesPos == vec(0, 0, 0)) {
            DesPos = Prop:pos()
        }
        
        local Direct = ( DesPos - EntPos ):normalized()
        local Angles = round(Direct, 2):toAngle()
        local Pitch  = Angles:pitch()
        local Yaw    = Angles:yaw()
        local Added  = 0
        local Roll   = Angles:roll()
        local Distance = EntPos:distance2(DesPos)
        
        local RangerU = rangerOffset(1000, EntPos, -Up)
        local RangerF = rangerOffset(By, Prop:toWorld(vec(Bx/2 + 6 + Vel:x()*tickInterval()/4, By/2, -12)), Right)
        local RangerR = rangerOffset(By*2, Prop:toWorld(vec(Bx/2 + Vel:x()*tickInterval()/4, 0, -12)), Right)
        local RangerL = rangerOffset(By*2, Prop:toWorld(vec(Bx/2 + Vel:x()*tickInterval()/4, 0, -12)), -Right)
        
        local DistanceU = RangerU:distance()
        local DistanceF = RangerF:distance()
        local DistanceR = RangerR:distance()
        local DistanceL = RangerL:distance()
        
        Outputs = DistanceF
        
        if (DistanceF < By - 1 & !Back) {
            Forward = -0
            Rand = randint(1, 2)
            Added = (Rand == 1) * -90 + (Rand == 2) * 90
            Back = 1
        } 
        elseif (DistanceF > By - 1 & !Back) {
            Forward = 1
        }
        else {
            Back = 0
        }
        
        local PushLeft  = (DistanceR < By)
        local PushRight = (DistanceL < By)
        
        if (DistanceU < Bz/2+25) {
            local Base_Turn = 200
            local Base_RVel = 25
            #local Diff = Prop:toLocal(Angles)
            #local YDiff = abs(Diff:yaw())
            local YAVel = abs(AVel:yaw())
            if (Back) {
                Prop:applyForce((Right * ( 100 * ( -PushLeft + PushRight) ) - Vel * 0.25 ) * Mass)
            }
            #Prop:applyForce((DesPos - EntPos - Vel * (0.5)) * Mass)
            Prop:applyForce((Forw * Forward * (Speed) - Vel * (0.75 + clamp(YAVel, 0, 0.25))) * Mass)
            
            Prop:stablized(ang(Pitch, Yaw + Added, Roll + clamp(AVel:yaw(), -8, 8)), Base_Turn * (1 + clamp(YAVel, 0, 0.5)), Base_RVel)
        } else {
            Prop:applyForce((vec(0, 0, -100) - Vel * 0) * Mass)
            Prop:stablized(EntAng, 150, 50)
        }
        
        if (abs(EntR) >= 89 | abs(EntP) >= 89) {
            Prop:setAng(ang(0, EntY, 0))
        }
        
        local Switch = 0
        if (Distance < 90000 + Vel:length()/10 & !Switch) {
            local LCurPos = array()
            NextPos += Direction
        
            if (NextPos < 1) {
                LCurPos = Path[map(), table][randint(Path[map(), table]:count()), array]
                for (I = 1, LCurPos:count()) {
                    local Vec = LCurPos[I, vector]
                    local R1 = random(-R, R)
                    local R2 = random(-R, R)
                    local Plus = vec(R1, R2, H)
                    Vec = Vec + Plus
                    LCurPos[I, vector] = Vec
                }
                
                NextPos = LCurPos:count()
                CurPos = LCurPos
            }
            elseif (NextPos > CurPos:count()) {
                LCurPos = Path[map(), table][randint(Path[map(), table]:count()), array]
                for (I = 1, LCurPos:count()) {
                    local Vec = LCurPos[I, vector]
                    local R1 = random(-R, R)
                    local R2 = random(-R, R)
                    local Plus = vec(R1, R2, H)
                    Vec = Vec + Plus
                    LCurPos[I, vector] = Vec
                }
                
                NextPos = 1
                CurPos = LCurPos
            } else {
                local R1 = random(-R, R)
                local R2 = random(-R, R)
                local Plus = vec(sinr(random(-1, 1)*180)*R1, cosr(random(-1, 1)*180)*R2, H)
                DesPos = CurPos[NextPos, vector] + Plus
            }
            Switch = 1
        }
    }
}

