@name SimfphysNodesFollow
@inputs  
@outputs Yaw Steer
@persist [CarEnt]:entity Car:wirelink [RangerL RangerR]:ranger Go Tick Delay
@persist [Path Route]:table Index BoxSize_Max IsHolding
@outputs Gear
@trigger 

function number entity:findLongestBoxSize() {
    local Max = 0
    if (This:isValid()) {
        local BoxSize = This:boxSize()
        local X = BoxSize[1]
        local Y = BoxSize[2]
        local Z = BoxSize[3]
        
        Max = max(X, max(Y, Z))
    }
    
    return Max
}

if (first() | duped()) {
    IsHolding = 0
    Tick  = 0
    Delay = 0.1
    BoxSize_Max = 0
    Index = 0
    Path = table()
    Route = table()
    Steer = 0
    Car = entity():isWeldedTo():wirelink()
    Car["Engine Start",number] = 1
    Car["Lock",number] = 0

    CarEnt = Car:entity()
    BoxSize_Max = CarEnt:findLongestBoxSize()
    #print(BoxSize_Max)
    #CarEnt:setColor(randvec()*255)
    
    holoCreate(1, entity():pos(), vec(1), ang(), vec(255), "hq_icosphere")
    holoCreate(2, entity():pos(), vec(1), ang(), vec(255), "hq_icosphere")
    
    holoColor(1, vec(255,0,0))
    holoColor(2, vec(0,255,0))
    holoParent(1, CarEnt)
    holoParent(2, CarEnt)
    
    holoAlpha(1, 0)
    holoAlpha(2, 0)
    Go = 1
    
    rangerFilter(CarEnt)
    rangerPersist(1)
    
#[
    Path["gm_goldencity_v2", table] = table(
        #array(vec(5918,-1095,17),vec(5834,-2179,17),vec(5822,-3198,17),vec(5960,-4285,17),vec(4687,-4152,17),vec(3506,-4150,17),vec(2231,-4317,17),vec(2367,-3200,17),vec(2347,-2172,17),vec(2173,-1083,17),vec(3514,-1220,17),vec(4692,-1217,17)),
        #table(vec(2199,-1040,17),vec(3495,-1223,17),vec(4656,-1216,17),vec(5978,-1049,17),vec(5816,-2158,17),vec(5818,-3183,17),vec(5997,-4271,17),vec(4680,-4153,17),vec(3513,-4153,17),vec(2265,-4311,17),vec(2365,-3199,17),vec(2362,-2162,17),vec(2183,-1036,17),vec(1233,-833,17),vec(265,-1010,17),vec(411,-353,17),vec(184,1409,17),vec(186,5391,17),vec(-1439,5558,17),vec(-2158,5403,17),vec(-1990,6544,17),vec(-1962,9050,17),vec(-1978,10686,17),vec(-2185,10994,17),vec(-2794,11204,17),vec(-4635,11204,17),vec(-5716,11209,17),vec(-10543,11206,17),vec(-11001,11003,17),vec(-11220,10546,17),vec(-11206,8736,17),vec(-11207,7749,17),vec(-11210,5837,17),vec(-11197,4904,17),vec(-11199,2678,17),vec(-11199,1736,17),vec(-11197,-575,265),vec(-11021,-1010,273),vec(-10520,-1218,273),vec(-8487,-1216,273),vec(-7620,-1216,266),vec(-5842,-1212,43),vec(-4789,-1209,17),vec(-5842,-1212,43),vec(-4789,-1209,17),vec(-196,-1213,17),vec(699,-1222,17),vec(2146,-1062,17))
        table(vec(5882,-2703,28),vec(5878,-6805,28),vec(6397,-8001,28),vec(6911,-9010,28),vec(6893,-10288,28),vec(7023,-10567,28),vec(8082,-10608,28),vec(11130,-10619,28),vec(11499,-10616,28),vec(11648,-10081,32),vec(11647,-7989,284),vec(11630,-4706,284),vec(11534,-4248,284),vec(11143,-4259,284),vec(9070,-4233,28),vec(2620,-4229,28),vec(-1429,-4234,28),vec(-2229,-4601,28),vec(-3546,-5269,28),vec(-5660,-5252,32),vec(-7663,-5259,282),vec(-10759,-5243,284),vec(-11095,-5463,284),vec(-11134,-10070,284),vec(-10995,-10575,284),vec(-10367,-10635,284),vec(-7707,-10622,284),vec(-5576,-10623,28),vec(-400,-10634,28),vec(232,-10550,28),vec(149,-9309,28),vec(125,-6829,28),vec(361,-4750,28),vec(364,-1433,28),vec(291,-1175,28),vec(650,-1101,28),vec(1759,-1141,28),vec(5588,-1151,28),vec(5788,-1081,28),vec(5931,-1279,28))
        #table(vec(2241,-1404,28),vec(2566,-1141,28),vec(4095,-1150,28),vec(5637,-1121,28),vec(5928,-1387,28),vec(5895,-2683,28),vec(5951,-4102,28),vec(5693,-4233,28),vec(3997,-4232,28),vec(2527,-4299,28),vec(2263,-4031,28),vec(2294,-2681,28))
    )
    ]#
    Path["gm_genesis", table] = table(
        #table(vec(1645,-10591,-8284),vec(4938,-10591,-8284),vec(8696,-10591,-8284),vec(9449,-10555,-8284),vec(9770,-10376,-8284),vec(9987,-10096,-8284),vec(10089,-9702,-8284),vec(10073,-8965,-8284),vec(10075,-6776,-8284),vec(9953,-6197,-8284),vec(9635,-5887,-8284),vec(9099,-5789,-8284),vec(8079,-5793,-8284),vec(6729,-5790,-8284),vec(-547,-5783,-8284),vec(-1998,-5763,-8284),vec(-6108,-5785,-8284),vec(-6526,-5843,-8284),vec(-6813,-6043,-8284),vec(-7038,-6475,-8284),vec(-7058,-7980,-8284),vec(-7005,-9810,-8284),vec(-6921,-10122,-8284),vec(-6697,-10411,-8284),vec(-6327,-10596,-8284))
        #table(vec(7539,-5515,-8284),vec(7534,-4661,-8169),vec(7536,-2073,-8156),vec(7410,-1612,-8156),vec(7096,-1301,-8156),vec(6579,-1188,-8156),vec(5086,-1174,-8156),vec(4815,-1112,-8156),vec(4522,-852,-8156),vec(4418,-481,-8156),vec(4448,2384,-8156),vec(4466,7156,-8156),vec(4345,7610,-8156),vec(4105,7838,-8156),vec(3691,8016,-8156),vec(2616,8060,-8156),vec(-476,8066,-8156),vec(-994,8038,-8156),vec(-1273,7748,-8156),vec(-1376,7232,-8156),vec(-1376,4654,-8156),vec(-1380,1110,-8156),vec(-1393,-423,-8156),vec(-1369,-1990,-8458),vec(-1347,-3372,-8476),vec(-1358,-5322,-8284),vec(-1293,-5656,-8284),vec(-1006,-5919,-8284),vec(-384,-6011,-8284),vec(2255,-6023,-8284),vec(6079,-5999,-8284),vec(6891,-6009,-8284),vec(7327,-5877,-8284))
        table(vec(9170,-10580,-8284),vec(9526,-10499,-8284),vec(9787,-10324,-8284),vec(10029,-9971,-8284),vec(10071,-9519,-8284),vec(10086,-6666,-8284),vec(9985,-6299,-8284),vec(9775,-6021,-8284),vec(9401,-5830,-8284),vec(8221,-5790,-8284),vec(8242,-5814,-8284),vec(7867,-5756,-8284),vec(7660,-5614,-8284),vec(7470,-5375,-8284),vec(7439,-5050,-8266),vec(7475,-4670,-8172),vec(7504,-4381,-8156),vec(7446,-1711,-8156),vec(7201,-1419,-8156),vec(6796,-1224,-8156),vec(5073,-1202,-8156),vec(4776,-1093,-8156),vec(4532,-836,-8156),vec(4473,-435,-8156),vec(4447,7066,-8156),vec(4391,7450,-8156),vec(4179,7761,-8156),vec(3798,7988,-8156),vec(3262,8016,-8156),vec(-507,8032,-8156),vec(-810,8038,-8156),vec(-1058,7933,-8156),vec(-1258,7704,-8156),vec(-1383,7317,-8156),vec(-1368,1099,-8156),vec(-1409,849,-8156),vec(-1496,664,-8156),vec(-1718,451,-8156),vec(-2088,388,-8156),vec(-9162,366,-8156),vec(-9416,302,-8156),vec(-9579,236,-8156),vec(-9802,75,-8156),vec(-9965,-102,-8156),vec(-10065,-435,-8156),vec(-10075,-4614,-8158),vec(-10074,-5005,-8255),vec(-9987,-5432,-8284),vec(-9858,-5696,-8284),vec(-9601,-5906,-8284),vec(-9262,-5973,-8284),vec(-8990,-5964,-8284),vec(-8798,-5990,-8284),vec(-8682,-6121,-8284),vec(-8639,-6361,-8342),vec(-8693,-6625,-8412),vec(-8691,-7023,-8517),vec(-8704,-8152,-8817),vec(-8701,-8649,-8828),vec(-8589,-9051,-8828),vec(-8421,-9272,-8828),vec(-8101,-9534,-8828),vec(-7671,-9611,-8828),vec(-7223,-9521,-8828),vec(-6876,-9357,-8828),vec(-6653,-9065,-8828),vec(-6543,-8690,-8828),vec(-6535,-8362,-8828),vec(-6551,-7341,-8828),vec(-6531,-7037,-8828),vec(-6389,-6747,-8828),vec(-6164,-6559,-8828),vec(-5878,-6494,-8828),vec(-5508,-6495,-8828),vec(-5185,-6571,-8828),vec(-4851,-6653,-8828),vec(-1574,-6651,-8828),vec(-1278,-6586,-8828),vec(-995,-6496,-8828),vec(-570,-6492,-8828),vec(-155,-6499,-8828),vec(158,-6409,-8828),vec(268,-6238,-8828),vec(378,-5939,-8828),vec(374,-5554,-8828),vec(355,-4064,-8828),vec(380,-3831,-8828),vec(493,-3647,-8828),vec(607,-3537,-8828),vec(812,-3454,-8828),vec(1105,-3429,-8828),vec(5114,-3437,-8828),vec(6797,-3401,-8278),vec(7029,-3337,-8202),vec(7244,-3361,-8156),vec(7411,-3465,-8156),vec(7488,-3664,-8156),vec(7478,-3933,-8156),vec(7346,-4212,-8156),vec(7317,-4526,-8156),vec(7317,-5098,-8279),vec(7298,-5312,-8284),vec(7169,-5562,-8284),vec(6867,-5728,-8284),vec(6522,-5755,-8284),vec(-487,-5774,-8284),vec(-1920,-5783,-8284),vec(-6124,-5789,-8284),vec(-6566,-5875,-8284),vec(-6777,-6053,-8284),vec(-6945,-6222,-8284),vec(-7017,-6495,-8284),vec(-7044,-6990,-8284),vec(-7003,-9663,-8284),vec(-6939,-10004,-8284),vec(-6805,-10239,-8284),vec(-6540,-10499,-8284),vec(-6188,-10577,-8284),vec(-2116,-10581,-8284),vec(3363,-10591,-8284))
    )
#[
    Path["gm_rustheart_nobots", table] = table(
        table(vec(3163,-13630,36),vec(4211,-13609,67),vec(5840,-13419,36),vec(7495,-13159,57),vec(8980,-12993,36),vec(10175,-12501,36),vec(11221,-11561,36),vec(11929,-10303,36),vec(12072,-8822,36),vec(11606,-7414,36),vec(10641,-6218,36),vec(9474,-5548,68),vec(7931,-5128,36),vec(7028,-4478,36),vec(6510,-3209,36),vec(6747,-1794,36),vec(8214,685,130),vec(10038,2398,222),vec(11260,3619,258),vec(11588,4608,276),vec(11412,5937,290),vec(10207,6866,289),vec(9015,6465,277),vec(8154,5399,256),vec(7322,4201,219),vec(5534,2323,109),vec(4177,1320,36),vec(1892,405,36),vec(-788,430,36),vec(-1578,-115,46),vec(-2608,-549,36),vec(-2846,-1246,36),vec(-2550,-2111,36),vec(-978,-2488,36),vec(-1321,-4440,36),vec(-1714,-5200,36),vec(-2549,-5818,36),vec(-2240,-6584,36),vec(-1362,-7425,36),vec(-1472,-9169,36),vec(-1793,-12287,36),vec(-1787,-13554,36),vec(-1401,-13573,36),vec(-120,-13626,36))
        table(vec(-9,-13451,36),vec(-2235,-13475,36),vec(-4316,-13510,63),vec(-6839,-13853,62),vec(-8795,-14059,36),vec(-9490,-13873,36),vec(-9977,-13461,36),vec(-10357,-12795,36),vec(-10456,-12006,36),vec(-10360,-10795,36),vec(-9881,-9968,36),vec(-9649,-9794,36),vec(-9565,-9495,36),vec(-10464,-7560,41),vec(-10693,-7420,53),vec(-11010,-7586,72),vec(-12476,-8398,134),vec(-13178,-8354,152),vec(-13890,-7626,160),vec(-14036,-6732,147),vec(-13616,-5416,101),vec(-12769,-4320,37),vec(-11685,-3633,36),vec(-11005,-3444,36),vec(-10776,-3263,36),vec(-10739,-2849,36),vec(-10965,-2454,36),vec(-11230,-2071,36),vec(-11259,-1320,36),vec(-11770,-1056,36),vec(-12350,-518,36),vec(-13214,695,71),vec(-13806,2034,132),vec(-14092,3510,159),vec(-13879,4076,156),vec(-13340,4717,140),vec(-11356,6934,36),vec(-10998,7490,36),vec(-10995,7797,36),vec(-11116,8035,36),vec(-11424,8437,36),vec(-13262,10609,36),vec(-13563,11357,36),vec(-13510,12108,36),vec(-13182,12923,36),vec(-12554,13642,36),vec(-11351,14349,36),vec(-10243,14532,36),vec(-8903,14305,36),vec(-6527,13274,-38),vec(-4191,12640,-237),vec(-1808,12657,-242),vec(542,13213,-53),vec(2700,13709,36),vec(4402,14075,36),vec(5905,14008,36),vec(7725,13613,36),vec(9065,13209,36),vec(9818,12508,36),vec(10042,12055,36),vec(10015,11627,36),vec(9778,11178,36),vec(9158,10887,36),vec(6604,9666,36),vec(5676,9489,51),vec(4531,9773,109),vec(1811,10046,164),vec(89,9685,138),vec(-2413,9071,36),vec(-3885,8773,36),vec(-4210,8404,36),vec(-4405,7866,36),vec(-4358,7301,36),vec(-3774,6833,36),vec(-2218,6179,68),vec(-503,5878,98),vec(887,5863,57),vec(1767,5922,36),vec(2316,5642,36),vec(2884,5110,36),vec(3255,4655,36),vec(3212,4040,36),vec(2678,3434,36),vec(2420,3076,36),vec(2697,2495,36),vec(3298,2042,36),vec(3727,1443,36),vec(4047,1245,36),vec(4333,1360,36),vec(5203,1946,82),vec(6588,3322,178),vec(7710,4700,238),vec(8426,6026,266),vec(9148,6780,279),vec(10083,6938,288),vec(10763,6661,292),vec(11150,6202,291),vec(11421,5398,286),vec(11577,4248,270),vec(11213,3535,256),vec(10429,2665,232),vec(8709,1398,170),vec(7723,208,96),vec(6727,-1557,36),vec(6413,-2663,36),vec(6508,-3324,36),vec(6844,-4163,36),vec(7302,-4868,36),vec(7890,-5162,36),vec(9401,-5621,67),vec(10232,-6002,46),vec(11392,-7238,36),vec(11957,-8674,36),vec(11843,-10021,36),vec(11433,-11036,36),vec(10518,-12109,36),vec(9418,-12765,36),vec(7779,-13084,44),vec(5720,-13401,36),vec(2612,-13555,36))

    )

    Path["gm_construct_m3_350", table] = table(
        #table(vec(9589,-403,-13272),vec(7271,-408,-13272),vec(6919,-240,-13272),vec(6695,98,-13272),vec(6673,1238,-13272),vec(6503,1515,-13272),vec(6177,1593,-13272),vec(3550,1594,-13272),vec(-14397,1615,-13272),vec(-14718,1493,-13272),vec(-14907,1053,-13272),vec(-14912,328,-13272),vec(-14751,136,-13272),vec(-14624,335,-13272),vec(-14639,1058,-13272),vec(-14553,1386,-13272),vec(-14224,1409,-13272),vec(6153,1424,-13272),vec(6410,1316,-13272),vec(6517,680,-13272),vec(6574,-87,-13272),vec(6825,-429,-13272),vec(7347,-602,-13272),vec(9621,-628,-13272))
        table(vec(2518,1398,-13272),vec(6221,1394,-13272),vec(6535,1528,-13272),vec(6660,1818,-13272),vec(6660,4060,-13272),vec(6686,6498,-13272),vec(6529,6939,-13272),vec(5995,7437,-13272),vec(4775,7438,-13272),vec(3339,7412,-13272),vec(2005,7406,-13272),vec(1742,7533,-13272),vec(1727,7888,-13272),vec(1749,12044,-13272),vec(1480,12588,-13272),vec(1018,12851,-13272),vec(-2854,12876,-13272),vec(-14473,12890,-13272),vec(-14736,12732,-13272),vec(-14845,12414,-13272),vec(-14865,1851,-13272),vec(-14709,1557,-13272),vec(-14360,1393,-13272))
        #table(vec(12309,-12493,-13276),vec(12460,-12345,-13276),vec(12368,-12149,-13276),vec(12336,-11871,-13276),vec(12477,-11740,-13276),vec(12673,-11803,-13276),vec(12874,-11968,-13276),vec(13065,-12086,-13276),vec(13274,-12308,-13276),vec(13203,-12594,-13276),vec(13260,-12905,-13276),vec(13307,-13193,-13276),vec(13027,-13298,-13276),vec(12708,-13442,-13276),vec(12440,-13343,-13276),vec(11900,-13336,-13276),vec(11641,-13008,-13276),vec(11885,-12840,-13276))
    )
    
    Path["gm_boreas", table] = table(
        table(vec(-3371,-2942,-6422), vec(-1000,-3514,-6398), vec(1138,-3645,-6336), vec(2093,-3445,-6309), vec(3398,-2854,-6248), vec(4707,-3088,-6164), vec(5979,-3744,-6037), vec(7249,-3014,-5988), vec(8177,-1309,-5948), vec(8386,354,-5829), vec(8100,1564,-5680), vec(7098,2709,-5641), vec(6576,3667,-5586), vec(6206,5674,-5420), vec(5443,7050,-5327), vec(3877,7860,-5213), vec(1589,8387,-5030), vec(-189,9477,-4593),  vec(-661,10477,-4311), vec(-306,11904,-3991), vec(-1274,12810,-3710), vec(-3420,12180,-3333), vec(-4294,13033,-3112), vec(-4377,14018,-2904), vec(-3573,14650,-2811), vec(-2166,14608,-2514), vec(-870,14743,-2105), vec(609,15033,-1683), vec(2173,14705,-1136), vec(2809,13962,-933), vec(2803,13077,-808), vec(2493,12036,-703), vec(2784,11406,-668), vec(3421,11033,-620), vec(4031,11422,-524), vec(4161,12454,-356), vec(4546,13732,-118), vec(5749,14261,113), vec(7573,13936,337), vec(9382,13271,451), vec(10585,12589,433), vec(11455,11983,355), vec(13159,11565,76), vec(14266,10519,-175), vec(14660,9383,-340), vec(14238,7965,-599), vec(13608,7672,-659), vec(12516,8227,-802), vec(11559,8229,-885), vec(11159,7335,-993),  vec(11526,6414,-1135), vec(12535,6144,-1356),vec(12535,6144,-1356), vec(13794,5588,-1690), vec(14472,3915,-2039), vec(14338,2449,-2416), vec(13888,1385,-2559), vec(13357,1627,-2619), vec(12979,2249,-2737), vec(12367,3297,-2898), vec(11514,4093,-3009),  vec(10772,4399,-3044), vec(10263,3877,-3054), vec(10943,3068,-3181), vec(11690,2083,-3414), vec(12026,945,-3646), vec(12623,-135,-3844), vec(13385,-965,-4083), vec(14046,-2139,-4377), vec(14000,-3422,-4663), vec(13577,-5089,-4924), vec(13577,-5089,-4924), vec(13357,-6411,-5088), vec(13452,-8186,-5077), vec(13764,-9359,-4992), vec(13907,-10683,-5025), vec(13820,-11858,-5176), vec(13325,-13008,-5360), vec(12405,-13677,-5523), vec(10727,-14383,-5787), vec(8830,-14598,-6015), vec(6375,-14550,-6337), vec(4570,-14486,-6585), vec(3620,-13976,-6677), vec(2468,-12501,-6889),  vec(1835,-12043,-6935), vec(945,-11864,-7061), vec(-763,-12193,-7306), vec(-1698,-12731,-7461), vec(-3036,-13082,-7710), vec(-4087,-12809,-7876), vec(-4330,-12336,-7902), vec(-4706,-12348,-7938), vec(-5613,-12449,-8022), vec(-6729,-12551,-8140), vec(-7607,-12564,-8167), vec(-8627,-12521,-8167), vec(-9877,-12539,-8167), vec(-11495,-12525,-8167), vec(-12800,-12160,-8218), vec(-13386,-11568,-8215), vec(-13768,-10321,-8190), vec(-13635,-9105,-8084), vec(-13379,-8274,-8011), vec(-12778,-7259,-7941), vec(-12943,-5451,-7800), vec(-12379,-4092,-7634), vec(-11825,-2229,-7452), vec(-11290,-315,-7447), vec(-11523,1387,-7446), vec(-12170,1298,-7416), vec(-12531,406,-7306), vec(-13306,-2150,-6949), vec(-13776,-2654,-6935), vec(-14432,-2523,-6934), vec(-14621,-1290,-6894), vec(-14028,322,-6722), vec(-13466,2539,-6501), vec(-12337,4001,-6375), vec(-9870,6466,-6379), vec(-8952,7168,-6423), vec(-8233,6281,-6416), vec(-7637,5197,-6358), vec(-7189,3414,-6250), vec(-6937,1048,-6289), vec(-6271,-1064,-6373), vec(-4918,-2279,-6411))
    )
]#
    Path["gm_bigcity_improved_lite", table] = table(
        table(vec(1889,-2238,-11108),vec(1993,-2284,-11108),vec(2389,-2273,-11108),vec(2908,-2214,-11108),vec(3307,-2461,-11108),vec(3289,-2812,-11108),vec(3289,-5836,-11108),vec(3294,-10609,-11108),vec(3378,-10889,-11108),vec(3784,-10971,-11108),vec(10723,-10946,-11108),vec(10983,-10941,-11108),vec(11108,-10571,-11108),vec(11097,-6116,-11108),vec(10809,-5939,-11108),vec(9526,-5930,-11108),vec(9264,-5954,-11108),vec(9200,-6351,-11108),vec(9197,-8815,-11108),vec(9057,-9040,-11108),vec(6330,-8998,-11108),vec(6220,-8768,-11108),vec(6228,-2423,-11108),vec(6924,-2100,-11108),vec(8793,-2113,-11108),vec(9266,-1732,-11108),vec(9267,-1147,-11108),vec(9237,-85,-11108),vec(9234,380,-11108),vec(9389,397,-11108),vec(10119,573,-11108),vec(10081,1084,-11108),vec(10082,5976,-11108),vec(5277,6238,-11108),vec(-1252,6219,-11108),vec(-1498,6304,-11108),vec(-1538,12223,-11108),vec(-1640,12496,-11108),vec(-2254,12583,-11108),vec(-8696,12571,-11108),vec(-8855,12306,-11108),vec(-8849,10542,-10860),vec(-8851,6410,-10852),vec(-8876,6334,-10852),vec(-8698,6095,-10852),vec(-4920,6046,-10852),vec(-4889,3034,-11108),vec(-4822,2781,-11108),vec(-4428,2717,-11108),vec(-2651,2720,-11108),vec(-2370,2883,-11108),vec(-1929,2870,-11108),vec(-1761,2815,-11108),vec(-1722,2457,-11108),vec(-1603,2044,-11108),vec(-1401,1724,-11108),vec(-1433,1345,-11108),vec(-1637,1185,-11108),vec(-2012,1152,-11108),vec(-2807,1167,-11108),vec(-3022,1054,-11108),vec(-3045,-1177,-11108),vec(-2833,-1368,-11108),vec(-1467,-1387,-11108),vec(-1322,-1642,-11108),vec(-1349,-2638,-11108),vec(-1473,-2848,-11108),vec(-1488,-3479,-11108),vec(-1054,-3904,-11108),vec(-431,-3867,-11108),vec(-260,-3720,-11108),vec(940,-3715,-11108),vec(1157,-3715,-11108),vec(1214,-3432,-11108),vec(1367,-3025,-11108),vec(1540,-2335,-11108)),
        table(vec(1594,-2245,-11108),vec(3129,-2266,-11108),vec(3394,-2089,-11108),vec(3452,-1711,-11108),vec(3471,782,-11108),vec(3357,968,-11108),vec(1893,976,-11108),vec(1748,1099,-11108),vec(1716,5912,-11108),vec(1566,6145,-11108),vec(961,6246,-11108),vec(-1926,6251,-11108),vec(-4250,6234,-10852),vec(-8468,6215,-10852),vec(-8715,6464,-10852),vec(-8705,10364,-10852),vec(-8681,12177,-11108),vec(-8508,12391,-11108),vec(-1849,12399,-11108),vec(-1655,12169,-11108),vec(-1701,8652,-11108),vec(-1683,6418,-11108),vec(-1590,6181,-11108),vec(-1367,6051,-11108),vec(4784,6068,-11108),vec(4939,5922,-11108),vec(4950,3181,-11108),vec(3653,3124,-11108),vec(3418,2946,-11108),vec(3325,1363,-11108),vec(3299,-2508,-11108),vec(3296,-5758,-11108),vec(3102,-5891,-11108),vec(-1058,-5853,-11108),vec(-1282,-5812,-11108),vec(-1309,-3977,-11108),vec(-1067,-3850,-11108),vec(-521,-3835,-11056),vec(-42,-3697,-11108),vec(980,-3743,-11108),vec(1180,-3597,-11108),vec(1298,-3111,-11108),vec(1493,-2796,-11108))
    )
    Path["gm_bigcity_improved", table] = Path["gm_bigcity_improved_lite", table]:clone()
#[   
    Path["gm_functional_flatgrass", table] = table(
        table(vec(112,1815,-11236),vec(331,2112,-11236),vec(571,2455,-11236),vec(579,2785,-11236),vec(393,3144,-11236),vec(-6,3312,-11236),vec(-409,3209,-11236),vec(-642,2757,-11236),vec(-482,2271,-11236),vec(-249,2032,-11236),vec(-113,1758,-11236),vec(-99,1338,-11236),vec(-86,672,-11236),vec(-86,-615,-11236),vec(-103,-2902,-11236),vec(-108,-4218,-11236),vec(-112,-5704,-11236),vec(-88,-8176,-11236),vec(-179,-8377,-11236),vec(-274,-8581,-11236),vec(-244,-8784,-11236),vec(-98,-8891,-11236),vec(85,-8888,-11236),vec(272,-8761,-11236),vec(302,-8503,-11236),vec(150,-8307,-11236),vec(92,-8154,-11236),vec(86,-4357,-11236),vec(95,696,-11236)),
        table(vec(90,1658,-11236),vec(221,1967,-11236),vec(582,2346,-11236),vec(670,2852,-11236),vec(377,3235,-11236),vec(-164,3307,-11236),vec(-579,3056,-11236),vec(-659,2530,-11236),vec(-370,2162,-11236),vec(-104,1731,-11236),vec(-87,-8186,-11236),vec(-166,-8423,-11236),vec(-392,-8490,-11236),vec(-8820,-8488,-11236),vec(-9076,-8370,-11236),vec(-9240,-8092,-11236),vec(-9247,8471,-11236),vec(-9253,8780,-11236),vec(-9096,8999,-11236),vec(-8835,9121,-11236),vec(-5613,9136,-11492),vec(-5328,9072,-11492),vec(-5096,8903,-11492),vec(-5027,8611,-11492),vec(-5021,5381,-11748),vec(-5115,5082,-11748),vec(-5288,4921,-11748),vec(-5475,4871,-11748),vec(-8758,4896,-12004),vec(-9047,4960,-12004),vec(-9201,5139,-12004),vec(-9256,5414,-12004),vec(-9259,8686,-12260),vec(-9163,8901,-12260),vec(-8970,9069,-12260),vec(-8722,9118,-12260),vec(-3566,9133,-12516),vec(-3347,9094,-12516),vec(-3214,8903,-12516),vec(-3227,8471,-12493),vec(-3231,3199,-12010),vec(-3236,-2032,-12004),vec(-3278,-2280,-12004),vec(-3480,-2369,-12004),vec(-3769,-2356,-12004),vec(-4059,-2472,-12004),vec(-4255,-2750,-12004),vec(-4335,-3063,-12004),vec(-4304,-9541,-11492),vec(-4240,-9818,-11492),vec(-4068,-10046,-11492),vec(-3814,-10180,-11492),vec(-364,-10213,-11236),vec(-171,-10135,-11236),vec(-2,-9962,-11236),vec(97,-9699,-11236),vec(91,-8922,-11236),vec(90,-8187,-11236))
    )
    
    Path["gm_cluster_01", table] = table(
        table(vec(-1243,-1561,8356),vec(-1009,-1906,8356),vec(-583,-1975,8356),vec(-295,-1839,8356),vec(-129,-1534,8356),vec(-207,-1189,8356),vec(-530,-1063,8356),vec(-946,-1138,8356),vec(-1249,-1426,8356),vec(-1646,-1840,8356),vec(-2046,-2037,8356),vec(-2550,-1947,8356),vec(-2793,-1566,8356),vec(-2638,-1161,8356),vec(-2258,-942,8356),vec(-1667,-941,8356),vec(-1336,-1291,8356))
    )
    
    Path["gm_mobenix_v3_final", table] = table(
        table(vec(-668,-10871,92),vec(-504,-10563,94),vec(-485,-10292,94),vec(-592,-9974,92),vec(-943,-9763,92),vec(-1334,-9774,92),vec(-1547,-10052,92),vec(-1561,-10368,92),vec(-1334,-10711,92),vec(-1033,-10823,92))
    )
    
    Path["gm_flatgrass_abs_v3c", table] = table(
        table(vec(2410,4976,-4056),vec(1267,4975,-4056),vec(-683,4977,-4056),vec(-1557,4918,-4056),vec(-1957,4609,-4056),vec(-2249,4079,-4056),vec(-2262,15,-4056),vec(-2434,-523,-4056),vec(-2965,-743,-4056),vec(-5899,-727,-4056),vec(-9310,-711,-4056),vec(-12413,-778,-4056),vec(-13119,-1128,-4056),vec(-13320,-1676,-4056),vec(-13325,-13921,-4056),vec(-13053,-14935,-4056),vec(-12383,-15199,-4056),vec(-10324,-15268,-4056),vec(-13,-15218,-4056),vec(1411,-15220,-4164),vec(2818,-15214,-4465),vec(4426,-15223,-4813),vec(6053,-15203,-5000),vec(7225,-15176,-5048),vec(8080,-14743,-5048),vec(8554,-13832,-5048),vec(8597,-13362,-5048),vec(8574,-8909,-5048),vec(8579,-5909,-5048),vec(8565,-2429,-5048),vec(8565,-828,-5048),vec(8583,875,-5048),vec(8579,4251,-5048),vec(8532,4993,-5047),vec(8559,6984,-4878),vec(8587,7289,-4830),vec(8558,9347,-4587),vec(8586,11895,-4256),vec(8571,13812,-4056),vec(8693,14399,-4056),vec(9172,14809,-4056),vec(9846,14896,-4056),vec(10341,14626,-4056),vec(10657,13950,-4056),vec(10637,9257,-4056),vec(10658,5402,-4054),vec(10641,1765,-4056),vec(10661,-2488,-4056),vec(10408,-3175,-4056),vec(9806,-3434,-4056),vec(7967,-3453,-4056),vec(7347,-3541,-4056),vec(6877,-4044,-4056),vec(6810,-4668,-4056),vec(6807,-9021,-3656),vec(6788,-11463,-3644),vec(6688,-11895,-3644),vec(6341,-11996,-3644),vec(-1668,-11925,-3644),vec(-1989,-11839,-3644),vec(-2094,-11570,-3644),vec(-2046,-9293,-3644),vec(-2101,-4901,-4049),vec(-2088,-1585,-4056),vec(-2052,3840,-4056),vec(-1907,4459,-4056),vec(-1258,4778,-4056),vec(441,4828,-4056),vec(777,4581,-4056),vec(809,4116,-4058),vec(812,478,-4615),vec(825,-3013,-4664),vec(791,-7008,-4075),vec(889,-7739,-4056),vec(1235,-7982,-4056),vec(3366,-8033,-4056),vec(3780,-7808,-4056),vec(3938,-7334,-4056),vec(3890,-3254,-4654),vec(3922,146,-4664),vec(3934,4061,-4062),vec(3954,4640,-4056),vec(3632,4972,-4056)),
        table(vec(3409,4969,-4056),vec(1850,4962,-4056),vec(1345,4953,-4056),vec(1032,4780,-4056),vec(836,4505,-4056),vec(824,4067,-4061),vec(827,176,-4661),vec(837,-3261,-4652),vec(830,-7092,-4062),vec(854,-7531,-4056),vec(969,-7750,-4056),vec(1276,-7995,-4056),vec(3271,-8024,-4056),vec(3596,-7892,-4056),vec(3788,-7701,-4056),vec(3904,-7148,-4056),vec(3903,-3213,-4660),vec(3906,-1544,-4664),vec(3960,-1298,-4664),vec(4127,-1141,-4664),vec(4487,-1074,-4664),vec(4781,-927,-4664),vec(4979,-610,-4664),vec(5044,-5,-4664),vec(5020,666,-4664),vec(5136,887,-4664),vec(5436,1058,-4664),vec(7346,1114,-4668),vec(7578,1052,-4668),vec(7720,893,-4668),vec(7772,561,-4686),vec(7799,-1388,-5047),vec(7838,-1689,-5048),vec(7977,-2067,-5048),vec(8104,-2490,-5048),vec(8124,-4766,-5048),vec(8131,-11811,-5048),vec(8128,-13653,-5048),vec(8062,-13964,-5048),vec(7779,-14383,-5048),vec(7346,-14699,-5048),vec(6510,-14789,-5028),vec(438,-14791,-4074),vec(-364,-14848,-4056),vec(-1229,-14933,-4056),vec(-3177,-14983,-4056),vec(-11759,-15013,-4056),vec(-12397,-14996,-4056),vec(-12732,-14891,-4056),vec(-13068,-14568,-4056),vec(-13130,-14106,-4056),vec(-13157,-7791,-4056),vec(-13164,-1834,-4056),vec(-13063,-1483,-4056),vec(-12866,-1175,-4056),vec(-12424,-954,-4056),vec(-8458,-939,-4056),vec(-2967,-932,-4056),vec(-2665,-1010,-4056),vec(-2401,-1231,-4056),vec(-2263,-1690,-4056),vec(-2282,-4783,-4056),vec(-2274,-9185,-3646),vec(-2263,-11536,-3644),vec(-2176,-11822,-3644),vec(-1980,-12043,-3644),vec(-1640,-12133,-3644),vec(6364,-12164,-3644),vec(6634,-12108,-3644),vec(6823,-11957,-3644),vec(6982,-11633,-3644),vec(7011,-9194,-3645),vec(6994,-4762,-4056),vec(7046,-4351,-4056),vec(7237,-3974,-4056),vec(7544,-3682,-4056),vec(7939,-3600,-4056),vec(9744,-3599,-4056),vec(10115,-3545,-4056),vec(10433,-3379,-4056),vec(10729,-3005,-4056),vec(10834,-2549,-4056),vec(10863,3939,-4056),vec(10844,4369,-4056),vec(10669,4692,-4056),vec(10348,4860,-4056),vec(9917,4971,-4056),vec(4768,4968,-4056))
    )
    Path["gm_cluster_01", table] = table(
        table(vec(78,13818,5030),vec(82,13942,5030),vec(122,14016,5030),vec(268,14093,5030),vec(448,14106,5030),vec(811,14107,5030),vec(966,14075,5030),vec(1030,13991,5030),vec(1047,13837,5030),vec(1047,13665,5030),vec(1019,13548,5030),vec(921,13588,5030),vec(939,13748,5030),vec(889,13910,5030),vec(746,13977,5030),vec(229,13981,5030),vec(114,13943,5030),vec(73,13827,5080),vec(173,13617,5030),vec(290,13455,5030),vec(323,13290,5030),vec(327,13125,5030),vec(372,12958,5030),vec(437,12787,5030),vec(462,12628,5030),vec(379,12550,5030),vec(283,12614,5030),vec(269,12771,5030),vec(368,12953,5030),vec(326,13140,5030),vec(323,13306,5030),vec(288,13462,5030),vec(158,13642,5030))
    )
    ]#
    Path["rp_deadcity", table] = table(
        table(vec(-887,2954,32),vec(-1038,2900,32),vec(-1148,2804,32),vec(-1242,2661,32),vec(-1254,2443,32),vec(-1280,893,32),vec(-1303,738,32),vec(-1393,602,32),vec(-1606,525,32),vec(-1923,544,32),vec(-5189,543,32),vec(-5319,515,32),vec(-5429,453,32),vec(-5535,350,32),vec(-5611,158,32),vec(-5630,-91,32),vec(-5637,-394,32),vec(-5724,-4516,36),vec(-5694,-4718,32),vec(-5605,-4839,32),vec(-5499,-4930,32),vec(-5307,-4973,32),vec(-4921,-4993,32),vec(-1489,-4956,32),vec(859,-4975,32),vec(1024,-4970,32),vec(1166,-4879,32),vec(1276,-4776,32),vec(1394,-4618,32),vec(1459,-4404,32),vec(1487,-4145,32),vec(1487,-2267,32),vec(1384,-1973,32),vec(1292,-1678,32),vec(1216,-1337,32),vec(1229,-1110,32),vec(1283,-878,32),vec(1427,-650,32),vec(1510,-460,32),vec(1530,-286,32),vec(1540,20,32),vec(1647,217,32),vec(1790,292,32),vec(2000,323,32),vec(2210,245,32),vec(2484,222,32),vec(2834,234,32),vec(4245,208,32),vec(4406,224,32),vec(4601,306,32),vec(4729,454,32),vec(4797,628,32),vec(4846,855,32),vec(4832,1164,32),vec(4879,1945,32),vec(4860,2098,32),vec(4818,2202,32),vec(4747,2353,32),vec(4654,2424,32),vec(4532,2507,32),vec(4363,2510,32),vec(4153,2515,32),vec(2772,2490,32),vec(2611,2512,32),vec(2467,2568,32),vec(2377,2684,32),vec(2363,2936,32),vec(2376,3209,32),vec(2428,3604,32),vec(2470,3784,32),vec(2466,3938,32),vec(2375,4015,32),vec(2224,4063,32),vec(2043,4012,32),vec(1780,3993,32),vec(958,4007,32),vec(744,4065,32),vec(455,4089,32),vec(278,4027,32),vec(168,3895,32),vec(115,3769,32),vec(88,3603,32),vec(103,3357,32),vec(109,3144,32),vec(51,3033,32),vec(-31,2951,32),vec(-164,2907,32),vec(-318,2906,32),vec(-516,2943,32),vec(-744,2949,32))
    )

    Path["gm_thebox_17", table] = table(
        table(vec(-15193,-12491,-13192),vec(-15086,-13032,-13192),vec(-14771,-13498,-13192),vec(-14321,-13807,-13192),vec(-13771,-13924,-13192),vec(-12968,-13925,-13192),vec(-12039,-13927,-13192),vec(-11254,-13929,-13192),vec(-10202,-13932,-13192),vec(-8971,-13935,-13192),vec(-7686,-13938,-13192),vec(-6562,-13940,-13192),vec(12142,-13906,-13192),vec(13738,-13907,-13192),vec(14300,-13793,-13192),vec(14765,-13507,-13192),vec(15063,-13050,-13192),vec(15186,-12502,-13192),vec(15195,-10780,-13192),vec(15187,6359,-13192),vec(15177,13761,-13192),vec(15070,14281,-13192),vec(14778,14764,-13192),vec(14325,15063,-13192),vec(13768,15180,-13192),vec(12900,15209,-13192),vec(-13163,15183,-13192),vec(-13760,15186,-13192),vec(-14291,15074,-13192),vec(-14745,14766,-13192),vec(-15050,14332,-13192),vec(-15172,13775,-13192),vec(-15201,13127,-13192),vec(-15176,-10450,-13192))
    )
    
    Path["gm_nightlight", table] = table(
        table(vec(-368,1513,-10204),vec(799,1524,-10204),vec(3439,1513,-10204),vec(4739,1494,-10204),vec(5091,1556,-10204),vec(5337,1690,-10204),vec(5555,1918,-10204),vec(5668,2232,-10204),vec(5690,2622,-10204),vec(5691,7037,-10204),vec(5695,7342,-10204),vec(5630,7533,-10204),vec(5501,7725,-10204),vec(5304,7868,-10204),vec(5083,7939,-10204),vec(4830,7964,-10204),vec(1753,7969,-10204),vec(1506,7933,-10204),vec(1283,7810,-10204),vec(1145,7643,-10204),vec(1039,7424,-10204),vec(1006,7219,-10204),vec(1037,3438,-10204),vec(1056,2890,-10204),vec(1052,2483,-10204),vec(999,2280,-10204),vec(853,2073,-10204),vec(660,1952,-10204),vec(409,1914,-10204),vec(109,1913,-10204),vec(-2017,1925,-10204),vec(-3904,1924,-10204),vec(-4164,1918,-10204),vec(-4326,1836,-10204),vec(-4502,1703,-10204),vec(-4654,1527,-10204),vec(-4735,1270,-10204),vec(-4729,1007,-10204),vec(-4699,647,-10204),vec(-4707,-1275,-10204),vec(-4702,-1408,-10204),vec(-4628,-1644,-10204),vec(-4525,-1840,-10204),vec(-4385,-2002,-10204),vec(-4201,-2086,-10204),vec(-3939,-2138,-10204),vec(-3477,-2165,-10204),vec(-1999,-2212,-10204),vec(-1838,-2175,-10204),vec(-1693,-2068,-10204),vec(-1563,-1877,-10204),vec(-1511,-1714,-10204),vec(-1486,-1491,-10204),vec(-1487,-1250,-10204),vec(-1596,855,-10204),vec(-1636,1068,-10204),vec(-1617,1260,-10204),vec(-1503,1459,-10204),vec(-1304,1600,-10204),vec(-1100,1618,-10204),vec(-907,1548,-10204))
    )
    
    Path["rp_rishi_rework_extended", table] = table(
        table(vec(-5643,-8510,5622),vec(-5608,-8641,5622),vec(-5536,-8726,5622),vec(-5389,-8790,5622),vec(-5236,-8787,5622),vec(-5132,-8698,5622),vec(-5049,-8563,5622),vec(-5027,-8438,5622),vec(-5047,-6449,5622),vec(-4957,-4854,5622),vec(-4879,-4674,5622),vec(-4720,-4479,5622),vec(-4469,-4321,5622),vec(-4019,-4173,5622),vec(-3042,-4082,5622),vec(-2669,-3955,5622),vec(-2408,-3803,5622),vec(-2239,-3589,5622),vec(-2181,-3394,5622),vec(-2159,-3013,5622),vec(-2015,-2758,5621),vec(-1886,-2609,5618),vec(-1720,-2509,5622),vec(-1507,-2496,5628),vec(-1204,-2619,5634),vec(-650,-3332,5653),vec(-103,-4624,5678),vec(146,-5544,5653),vec(336,-6879,5755),vec(521,-8215,5688),vec(684,-9336,5699),vec(962,-9755,5662),vec(1280,-9974,5638),vec(1641,-10079,5644),vec(2049,-10007,5680),vec(3040,-9898,5652),vec(3336,-9647,5685),vec(3636,-9294,5665),vec(3814,-8875,5654),vec(3859,-8426,5658),vec(3827,-7807,5648),vec(3610,-6762,5686),vec(3394,-4728,5636),vec(3313,-2193,5681),vec(2773,-716,5736),vec(2438,-343,5716),vec(1919,98,5693),vec(1233,622,5722),vec(476,1282,5750),vec(-154,1561,5740),vec(-1167,1821,5748),vec(-2352,1900,5709),vec(-3386,1860,5690),vec(-4395,1725,5671),vec(-4835,1571,5644),vec(-5131,1400,5644),vec(-5531,1049,5666),vec(-5733,426,5703),vec(-6042,-403,5698),vec(-6101,-1082,5663),vec(-5966,-1378,5636),vec(-5740,-1644,5628),vec(-5455,-1834,5645),vec(-5094,-1885,5698),vec(-4482,-1787,5698),vec(-3935,-1773,5694),vec(-3214,-1829,5634),vec(-2905,-1993,5610),vec(-2727,-2132,5598),vec(-2577,-2369,5597),vec(-2513,-2649,5616),vec(-2500,-3010,5622),vec(-2569,-3328,5622),vec(-2674,-3587,5622),vec(-2894,-3740,5622),vec(-3147,-3741,5622),vec(-4308,-3762,5622),vec(-4783,-3866,5622),vec(-4996,-4082,5622),vec(-5239,-4350,5622),vec(-5467,-4808,5622),vec(-5454,-5592,5622),vec(-5550,-6721,5622),vec(-5539,-7539,5622))
    )

    local Distance  = 1000000
    local Index1    = 0
    local Index2    = 0
    for (I = 1, Path[map(), table]:count()) {
        local Pos = Path[map(), table][I, table]
        for (J = 1, Pos:count()) {
            local Nearest = entity():pos():distance(Pos[J, vector])
            
            if (Nearest < Distance) {
                Distance = Nearest
                Index1 = I
                Index2 = J
            }
        }
    }
    
    Route = Path[map(), table][Index1, table]
    Next  = Index2
    Init  = Next
    Index = Init
    print( Route[Init, vector] )
    
    local R = 24
    for (I = 1, Route:count()) {
        local Vec = Route[I, vector]
        local R1 = random(-1, 1) * R
        local R2 = random(-1, 1) * R
        local Plus = vec(R1, R2, 0)
        Vec = Vec + Plus
        Route[I, vector] = Vec
    }
    
    holoCreate(3, CarEnt:toWorld(vec(0, 0, 100)), vec(1, 1, 1), ang(), vec(255), "models/sprops/misc/alphanum/alphanum_arrow_b.mdl")
    holoParent(3, CarEnt)
    holoAlpha(3, 0)
    Connected = CarEnt:getConnectedEntities()
    rangerFilter(Connected)
    rangerPersist(1)
    
    VOffset = vec(18, 12*0, 0) # sim_fphys_arielatom
    AOffset = ang(-45, 0, 0)
    
    #VOffset = vec(84, 24, 42) # sim_fphys_l4d_longnose_truck
    #AOffset = ang(-15, 0, 0)
    
    #VOffset = vec(178, 36, -36) # sim_fphys_l4d_fire_truck
    #AOffset = ang(-15, 0, 0)
    
    #VOffset = vec(120, 30, 42) # sim_fphys_l4d_cbus
    #AOffset = ang(-15, 0, 0)
    
    VOffset = vec(32, 12, 12) # sim_fphys_arielatom
    AOffset = ang(-45, 0, 0)
    
    holoCreate(4, CarEnt:toWorld(VOffset), vec(1), CarEnt:toWorld(AOffset), vec(255), "models/Humans/Group01/Female_0" + randint(1, 4) + ".mdl")
    holoParent(4, CarEnt)
    #print(holoGetAnims(1))
    holoAnim(4, "sitchair1", 1, 0)
    holoSetPose(4, "head_pitch", -24)
    
    holoAlpha(4, 0)
}

event tick() {
    local Cur = curtime()
    
    if (Cur > Tick + Delay) {
        Tick = Cur
        local Switch = 0
        local NextIndex = Index + 1
        if (NextIndex > Route:count()) {
            NextIndex = 1
        }
        local EndPos = Route[Index, vector]
        #NextEndPos = Route[NextIndex, vector]
        local Diff   = EndPos - CarEnt:toWorld(vec(0))
        #local NextDiff = NextEndPos - CarEnt:pos()
        
        RangerL = rangerOffset(500, CarEnt:massCenter() + CarEnt:right() * 55, CarEnt:forward() - CarEnt:up() * 0.03)
        RangerR = rangerOffset(500, CarEnt:massCenter() + CarEnt:right() *-55, CarEnt:forward() - CarEnt:up() * 0.03)
    
        holoPos(1, RangerL:pos())
        holoPos(2, RangerR:pos())
            
        Distance     = EndPos:distance(CarEnt:pos())
        #NextDistance = NextEndPos:distance2(CarEnt:pos())
        
        Yaw = Diff:normalized():toAngle():yaw()
        
        #CurSteer = (CarEnt:toLocal(ang(0, Yaw, 0)):yaw() + RangerL:hit() * 30 - RangerR:hit() * 30) * tickInterval()
        Steer    = lerp(Steer, (CarEnt:right():dot(Diff:normalized())*-90), 0.8)
        
        #local NextSteer = CarEnt:toLocal(ang(0, NextYaw, 0))[2]
        local Speed = toUnit("km/h", CarEnt:vel():length())
        
        holoAng(3, ang(90, Yaw, 0))
    
        if (Go) {
            local Brake = 
                (Distance <= 3000 & Speed >= 70) +
                (Distance <= 2000 & Speed >= 60) +
                (Distance <= 1500 & Speed >= 50) +
                (Distance <= 1250 & Speed >= 40) +
                (Distance <= 1000 & Speed >= 30) +
                (Distance >= 1500 & abs(Steer) >= 55 & Speed >= 20) +
                (Distance >= 1000 & Distance < 1500 & abs(Steer) >= 50 & Speed >= 15) +
                (Distance >=  500 & Distance < 1000 & abs(Steer) >= 45 & Speed >= 10) +
                (Distance >=  250 & Distance <  500 & abs(Steer) >= 40 & Speed >=  5)
    
            Gear = 1
    #[
                (Distance >= 3000) * 5 +
                (Distance <  3000 & Distance >= 2000) * 4 +
                (Distance <  2000 & Distance >= 1000) * 3 +
                (Distance <  1000 & Distance  >= 250) * 2 +
                (Distance <   250) * 1
    ]#
            
            Car["Throttle",number]      = !Brake
            Car["Brake/Reverse",number] = Brake
            Car["Steer",number] = (-Steer) * tickInterval()
            #Car["Set Gear", number] = Gear
            
            if (abs(Steer) >= 80) { Go = 0 }
            if (RangerL:distance() < BoxSize_Max/2 | RangerR:distance() < BoxSize_Max/2) { Go = 0 }
        } else {
            Car["Throttle",number] = 0
            Car["Brake/Reverse",number] = 0.8
            Car["Steer",number] = (Steer) * tickInterval()
            
            if ((RangerL:distance() > BoxSize_Max/2 & RangerR:distance() > BoxSize_Max/2) & abs(Steer) <= 50) { Go = 1 }
        }
        
        if ((CarEnt:pos() + CarEnt:vel() * tickInterval()):distance(EndPos:setZ(CarEnt:pos():z())) < 150 & !Switch) {
            Switch = 1
            Index++
            
            if (Index > Route:count()) {
                Route = Path[map(), table][randint(Path[map(), table]:count()), table]
                Index = 1
            }
            
            local Vec = Route[Index, vector]
            Route[Index, vector] = Vec
            
            #print( Route[Index, vector] )
        }
        
        if (CarEnt:isPlayerHolding() & !IsHolding) {
            IsHolding = 1
        }
        
        if (!CarEnt:isPlayerHolding() & IsHolding) {
            IsHolding = 0
            local Distance  = 1000000
            local Index1    = 0
            local Index2    = 0
            for (I = 1, Path[map(), table]:count()) {
                local Pos = Path[map(), table][I, table]
                for (J = 1, Pos:count()) {
                    local Nearest = entity():pos():distance(Pos[J, vector])
                    
                    if (Nearest < Distance) {
                        Distance = Nearest
                        Index1 = I
                        Index2 = J
                    }
                }
            }
            
            Route = Path[map(), table][Index1, table]
            Next  = Index2
            Init  = Next
            Index = Init
        }
    }
}

event removed(_:number) {
    Car["Engine Stop",number] = 1
    Car["Engine Start",number] = 0
    Car["Lock",number] = 0
}

