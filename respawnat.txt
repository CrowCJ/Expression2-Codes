@name ReSpawnAt
@inputs 
@outputs 
@persist Pod:entity
@trigger 
@strict

if (first()) {
    propSpawnUndo(0)
    if (propCanCreate()) {
        Pod = seatSpawn("models/nova/airboat_seat.mdl", entity():pos(), ang(), 1)
        Pod:noCollideAll(1)
        Pod:setAlpha(0)
        Pod:propNotSolid(1)
    }
    
    rangerFilter(owner())
    rangerPersist(1)
}

event tick() {
    #local Ranger = rangerOffset(1000, owner():pos(), vec(0, 0, -1))
    Pod:setPos(owner():pos() - vec(0, 0, 12))
    
    if (Pod:driver():isValid() & Pod:driver() != owner()) {
        Pod:killPod()
    }
}

event playerDeath(Victim:entity, _:entity, _:entity) {
    if (Victim == owner()) {
        Pod:setAng(Victim:angles())
        #Pod:setPos(Victim:pos() + vec(0, 0, -12))
    }
}

event playerSpawn(Player:entity) {
    if (Player == owner()) {
        Pod:use()
        Pod:ejectPod()
    }
}
