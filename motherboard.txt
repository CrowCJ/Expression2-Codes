@name MotherBoard
@inputs  Active
@outputs Power
@persist Num Scl HoloInfo:table Tick Created Acc Spin Lights:array
@trigger 

if (first() | duped()) {
    Num = 0
    Acc = 0
    Spin = 0
    Power = 0
    Tick = 0
    Created = 0
    HoloInfo = table()
    Lights = array()
    
    entity():setAlpha(0)
    function holo(Pos:vector,Scl:vector,Ang:angle,Col:vector,Mat:string,Mod:string,Alph:number){
        Num++
        holoCreate(Num)
        holoModel(Num,Mod)
        holoScale(Num,Scl)
        holoColor(Num,Col)
        holoAlpha(Num,Alph)
        holoMaterial(Num,Mat)
        holoPos(Num,entity():toWorld(Pos))
        holoAng(Num,entity():toWorld(Ang))
        holoParent(Num,entity())
    }
    
    Scl = 1
    HoloInfo = table(
        array(vec(0,0,5),vec(0.11,0.11,0.1),ang(180,0,0),vec(150),"sprops/textures/sprops_rubber2","models/props/de_prodigy/fanoff.mdl",255),
        array(vec(5,0,-0.2),vec(2,2,0.05),ang(),vec(255),"sprops/textures/sprops_rubber2","hq_cube",255),
        array(vec(12,-6,-0.1),vec(1, 1.125, 1.2),ang(0,0,0),vec(50),"","models/hammy/pci_slot.mdl",255),
        
        array(vec(8,1,1),vec(0.125, 0.4, 0.02),ang(0,0,0),vec(0, 100, 0),"","cube",255),
        array(vec(8,1,1.1),vec(0.08, 0.25, 0.02),ang(0,0,0),vec(50),"","cube",255),
        array(vec(8,3.5,1),vec(0.13, 0.02, 0.04),ang(0,0,0),vec(0),"","cube",255),
        array(vec(8,-1.5,1),vec(0.05, 0.05, 0.04),ang(0,0,0),vec(0),"","hq_cylinder",255),
        
        #array(vec(15,-6,0),vec(1, 1.125, 1.1),ang(0,180,0),vec(255),"","models/hammy/pci_slot.mdl",255),        
        #array(vec(0,-11,0),vec(1),ang(0,90,0),vec(255),"","models/wingf0x/hdmisocket.mdl",255),
        array(vec(6,-12,0.25),vec(0.5),ang(0,90,0),vec(255),"","models/wingf0x/ethernetsocket.mdl",255),
        array(vec(6,-12,1.25),vec(0.5),ang(0,90,0),vec(255),"","models/wingf0x/ethernetsocket.mdl",255),
        array(vec(0,-11,1.2),vec(0.75,0.2,0.15),ang(0,0,0),vec(255),"sprops/textures/sprops_rubber2","cube",255),
        array(vec(2.2,-10.5,1.2),vec(0.75,0.1,0.15),ang(0,0,0),vec(255),"sprops/textures/sprops_rubber2","cube",255),
        array(vec(0,-11.1,1.2),vec(0.73,0.2,0.13),ang(0,0,0),vec(0),"","cube",255),
        array(vec(0,0,0),vec(0.42,0.42,0.1),ang(0,0,0),vec(150),"sprops/textures/sprops_metal5","hq_stube_thin",255),
        
        array(vec(0,0,0),vec(0.4,0.4,0.1),ang(0,0,0),vec(150),"sprops/textures/sprops_metal5","hq_rcube",255),
        
        array(vec(0,0,1),vec(0.4,0.3,0.06),ang(0,0,0),vec(200,100,0),"sprops/textures/sprops_metal5","cube",255),
        array(vec(0.45,-1,1.65),vec(0.08),ang(-90,90,0),vec(200,100,0),"sprops/textures/sprops_metal5","models/props_c17/metalladder002b.mdl",255),
        array(vec(-0.45,-1,1.65),vec(0.08),ang(-90,90,0),vec(200,100,0),"sprops/textures/sprops_metal5","models/props_c17/metalladder002b.mdl",255),
        
        array(vec(0,0,4),vec(0.52,0.8,0.52),ang(0,0,90),vec(150),"sprops/textures/sprops_rubber2","models/sprops/misc/sq_holes/sqhole_d0_12.mdl",255),
        array(vec(0,0,4),vec(0.15,0.15,0.025),ang(0,45,0),vec(150),"sprops/textures/sprops_rubber2","models/mechanics/solid_steel/sheetmetal_plusb_4.mdl",255)
#[
        array(vec(0,0,0),vec(0.4,0.4,0.025),ang(0,0,0),vec(200,150,0),"sprops/textures/sprops_metal5","hq_stube_thick",255),
        array(vec(0,0,0),vec(0.25,0.25,0.025),ang(0,0,0),vec(200,150,0),"sprops/textures/sprops_metal5","hq_stube_thick",255),
        array(vec(-0.5,0,0.025),vec(0.025,0.025,0.025),ang(0,0,0),vec(150),"sprops/textures/sprops_metal5","models/props_phx/gears/rack9.mdl",255),
        array(vec(0,0,0.025),vec(0.025,0.025,0.025),ang(0,0,0),vec(150),"sprops/textures/sprops_metal5","models/props_phx/gears/rack9.mdl",255),
        array(vec(0.5,0,0.025),vec(0.025,0.025,0.025),ang(0,0,0),vec(150),"sprops/textures/sprops_metal5","models/props_phx/gears/rack9.mdl",255)
]#
    )
    
    for (I = 1, 4) {
        local Array = array(vec(1.5,5 + (I-1) * 1.5,0),vec(1),ang(0,-90,0),vec(255),"","models/wingf0x/isasocket.mdl",255)
        HoloInfo:pushArray(Array)
        local Array2 = array(vec(1.5,5 + (I-1) * 1.5,0.9),vec(1),ang(0,90,0),vec(255),"","models/cheeze/wires/ram.mdl",255)
        HoloInfo:pushArray(Array2)
        local Array3 = array(vec(1.5,5 + (I-1) * 1.5,3.02),vec(0.09, 0.005, 0.05),ang(0,0,0),vec(0),"debug/debugdrawflat","models/props_phx/trains/double_wheels_base.mdl",255)
        HoloInfo:pushArray(Array3)
        Lights:pushNumber(HoloInfo:count())
        local Array4 = array(vec(1.5,5 + (I-1) * 1.5,4),vec(0.09, 0.005, 0.05),ang(180,0,0),vec(0),"debug/debugdrawflat","models/props_phx/trains/double_wheels_base.mdl",255)
        HoloInfo:pushArray(Array4)
        Lights:pushNumber(HoloInfo:count())
        local Array5 = array(vec(-2.2 + (I) * 0.88,0,2.25),vec(0.02, 0.02, 0.4),ang(0,0,90),vec(200,100,0),"","hq_cylinder",255)
        HoloInfo:pushArray(Array5)
    }
    
    for (I = 1, 10) {
        local Array = array(vec(0,-2.75 + (I) * 0.5,2.25),vec(0.005, 0.5, 0.1),ang(0,90,0),vec(100),"","cube",255)
        HoloInfo:pushArray(Array)
    }
}

if (~Active & Active) {
    Power = !Power
}

event tick() {
    Tick++
    if (Tick%2 == 0) {
        if (Created < HoloInfo:count() & holoCanCreate()) {
            Created++
            local Array = HoloInfo[Created, array]
            local Pos   = Array[1, vector] * Scl
            local Scale = Array[2, vector] * Scl
            local Ang   = Array[3, angle]
            local Color = Array[4, vector]
            local Mat   = Array[5, string]
            local Model = Array[6, string]
            local Alpha = Array[7, number]
            holo(Pos, Scale, Ang, Color, Mat, Model, Alpha)
        } else {
            Acc += clamp(Power - Acc, -0.01, 0.01)
            Spin -= Acc * 70
            holoAng(1, entity():toWorld(ang(180, Spin, 0)))
            
            for (I = 1, Lights:count()) {
                local Light = Lights[I, number]
                Color = hsv2rgb(Tick % 360, 1, 1) * Power
                holoColor(Light, Color)
                holoColor(Light, Color)
            }
        }
    }
}
